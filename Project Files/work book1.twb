<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
      </column>
    </datasource>
    <datasource caption='Co2 (Pd)' inline='true' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MARTIN' name='sqlserver.0qcpn6v1007ctc17muis403emaj0'>
            <connection authentication='sspi' class='sqlserver' dbname='Pd' odbc-native-protocol='yes' one-time-sql='' server='MARTIN' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.0qcpn6v1007ctc17muis403emaj0' name='Co2' table='[dbo].[Co2]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.0qcpn6v1007ctc17muis403emaj0' name='Co2' table='[dbo].[Co2]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>130</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>130</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>130</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Co2]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2_E0201308F5B440318220CCDB96C5DA67]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Co2' datatype='table' name='[__tableau_internal_object_id__].[Co2_E0201308F5B440318220CCDB96C5DA67]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' datatype-customized='true' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' datatype-customized='true' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' datatype-customized='true' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' datatype-customized='true' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' datatype-customized='true' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' datatype-customized='true' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' datatype-customized='true' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' datatype-customized='true' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' datatype-customized='true' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' datatype-customized='true' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Co2' id='Co2_E0201308F5B440318220CCDB96C5DA67'>
            <properties context=''>
              <relation connection='sqlserver.0qcpn6v1007ctc17muis403emaj0' name='Co2' table='[dbo].[Co2]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CO2 Emission India vs United States'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CO2 Emission India vs United States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</rows>
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] * [federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{A196D9B2-89DA-419A-948F-DA6C68990540}' />
    </worksheet>
    <worksheet name='CO2 Emission Over Past 10 Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]' included-values='in-range'>
            <min>2010</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{E7414B17-CD2F-467F-88A5-C30AC72F7D88}' />
    </worksheet>
    <worksheet name='CO2 Emission Overtime'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CO2 Emission Overtime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{FC393D39-2E51-4891-80AE-5831053C8DFA}' />
    </worksheet>
    <worksheet name='CO2 Emission Per Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CO2 Emission Per Captia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{406916F1-2563-45BC-B940-576F5016D897}' />
    </worksheet>
    <worksheet name='CO2 Emission from 1990 to 2020 Based on Internal Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' />
              <lod column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{841A7136-B4ED-4B40-9688-96353DCA2076}' />
    </worksheet>
    <worksheet name='CO2 Emission in 2020'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:ok]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:ok] / [federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk])</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{C6B53CB8-3024-4DF8-A1D4-56D7878F7425}' />
    </worksheet>
    <worksheet name='CO2 Emissions by International Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] * [federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk])</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{110FF7F9-96EC-47A0-9E34-DC481BF80916}' />
    </worksheet>
    <worksheet name='China vs India Internal Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' value='103' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]</rows>
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] / [federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{15935251-B9FF-415F-A8B4-69FCBAF2E930}' />
    </worksheet>
    <worksheet name='Continent Wise Contribution by Internal Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]</rows>
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] / [federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CB80A156-9018-4911-B91C-942676230BE5}' />
    </worksheet>
    <worksheet name='Cumulative CO2 and CO2 Per Capita Over Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 Per Capita' datatype='real' datatype-customized='true' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cumulative_co2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cumulative_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2_per_capita:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cumulative_co2:qk])</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E2E46B76-7060-48F3-918A-6E8F1BF2D76D}' />
    </worksheet>
    <worksheet name='Donut Chart for Cement CO2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865436913671]' role='measure' type='quantitative' user:unnamed='Donut Chart for Cement CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865436942345]' role='measure' type='quantitative' user:unnamed='Donut Chart for Cement CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865436913671]' derivation='User' name='[usr:Calculation_1160239865436913671:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865436942345]' derivation='User' name='[usr:Calculation_1160239865436942345:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865436942345:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865436913671:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865436942345:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865436913671:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865436942345:qk])</cols>
      </table>
      <simple-id uuid='{3D0B7BD1-8AB5-4916-9DD4-359324989C3C}' />
    </worksheet>
    <worksheet name='Donut Chart for Coal CO2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865431015425]' role='measure' type='quantitative' user:unnamed='Donut Chart for Coal CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865434447877]' role='measure' type='quantitative' user:unnamed='Donut Chart for Coal CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865431015425]' derivation='User' name='[usr:Calculation_1160239865431015425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865434447877]' derivation='User' name='[usr:Calculation_1160239865434447877:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865434447877:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865431015425:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.7016575336456299' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865434447877:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865431015425:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865434447877:qk])</cols>
      </table>
      <simple-id uuid='{B61604F2-8789-462D-8803-1B3793ACB78D}' />
    </worksheet>
    <worksheet name='Donut Chart for Flaring CO2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865439297551]' role='measure' type='quantitative' user:unnamed='Donut Chart for Flaring CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865439330321]' role='measure' type='quantitative' user:unnamed='Donut Chart for Flaring CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865439297551]' derivation='User' name='[usr:Calculation_1160239865439297551:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865439330321]' derivation='User' name='[usr:Calculation_1160239865439330321:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865439330321:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865439297551:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865439330321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865439297551:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865439330321:qk])</cols>
      </table>
      <simple-id uuid='{6FD35286-BB10-4E1A-8AB8-1AF2197A9707}' />
    </worksheet>
    <worksheet name='Donut Chart for Gas CO2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865438216203]' role='measure' type='quantitative' user:unnamed='Donut Chart for Gas CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865438253069]' role='measure' type='quantitative' user:unnamed='Donut Chart for Gas CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865438216203]' derivation='User' name='[usr:Calculation_1160239865438216203:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865438253069]' derivation='User' name='[usr:Calculation_1160239865438253069:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865438253069:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865438216203:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865438253069:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865438216203:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865438253069:qk])</cols>
      </table>
      <simple-id uuid='{E3A13375-522E-4466-AD8A-A1FD2DBB3CE6}' />
    </worksheet>
    <worksheet name='Donut Chart for Oil CO2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865440124947]' role='measure' type='quantitative' user:unnamed='Donut Chart for Oil CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='avg(0.0)' datatype='real' name='[Calculation_1160239865440174101]' role='measure' type='quantitative' user:unnamed='Donut Chart for Oil CO2'>
              <calculation class='tableau' formula='avg(0.0)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865440124947]' derivation='User' name='[usr:Calculation_1160239865440124947:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1160239865440174101]' derivation='User' name='[usr:Calculation_1160239865440174101:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865440174101:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865440124947:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865440174101:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865440124947:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[usr:Calculation_1160239865440174101:qk])</cols>
      </table>
      <simple-id uuid='{95D77684-4FFD-4AA1-B6BD-61AB64AB8170}' />
    </worksheet>
    <worksheet name='Emission Rate by Internal Factors'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk] + ([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk] + ([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk] + ([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk] + ([federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk] + [federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{92AFFC93-AE23-42F9-8E8D-43B2878F3E89}' />
    </worksheet>
    <worksheet name='Overall Contribution by China in CO2 Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
              <lod column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]</rows>
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] / [federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E9236401-7EAF-4CCC-97C5-6EE95397AF17}' />
    </worksheet>
    <worksheet name='Overall Contribution to India in CO2 Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Cement Co2' datatype='real' datatype-customized='true' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' datatype-customized='true' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' datatype-customized='true' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' datatype-customized='true' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' datatype-customized='true' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]</rows>
        <cols>([federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk] / [federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{47A518CB-AE14-4BAC-899E-2C34D6A7ED72}' />
    </worksheet>
    <worksheet name='Top Countries Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Countries Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <lod column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{9321DD4D-BFFA-4E11-B379-BBB894FE4E1A}' />
    </worksheet>
    <worksheet name='Total Emission by Continents'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Emission by Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
              <wedge-size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E394D39-ED57-4010-B938-53273AA8169B}' />
    </worksheet>
    <worksheet name='Total World Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total World Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 (Pd)' name='federated.0v5l7bi1haz6vk15smg1y1lozf77' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v5l7bi1haz6vk15smg1y1lozf77'>
            <column caption='Co2 (Co2)' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' />
              <size column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
              <text column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' />
              <geometry column='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Latitude (generated)]</rows>
        <cols>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B0CCFB7F-3B7E-4F4B-9B6B-B379BA98B539}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CO2 Emissions Story' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='98812' x='594' y='940'>
            <zone h='4935' id='3' type-v2='title' w='98812' x='594' y='940' />
            <zone h='11868' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98812' x='594' y='5875' />
            <zone h='81317' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98812' x='594' y='17743'>
              <flipboard active-id='15' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Countries Emitting Highest CO2' captured-sheet='Top Countries Emission' id='1' />
                  <story-point caption='Total CO2 from 1975 to 2020' captured-sheet='CO2 Emission Overtime' id='2' />
                  <story-point caption='Total CO2 Emissions by Continents' captured-sheet='Total Emission by Continents' id='3' />
                  <story-point caption='CO2 Emission due to Internal Reasons' captured-sheet='Emission Rate by Internal Factors' id='4' />
                  <story-point caption='CO2 Emission due to External Reasons' captured-sheet='CO2 Emissions by International Factors' id='5' />
                  <story-point caption='Continents Contribution due to Coal CO2 Emission' captured-sheet='Donut Chart for Coal CO2' id='6' />
                  <story-point caption='Continents Contribution due to Cement CO2 Emission' captured-sheet='Donut Chart for Cement CO2' id='7' />
                  <story-point caption='Continents Contribution due to Gas CO2 Emission' captured-sheet='Donut Chart for Gas CO2' id='8' />
                  <story-point caption='Continents Contribution due to Flaring CO2 Emission' captured-sheet='Donut Chart for Flaring CO2' id='9' />
                  <story-point caption='Continents Contribution due to Oil CO2 Emission' captured-sheet='Donut Chart for Oil CO2' id='10' />
                  <story-point caption='CO2 Emission Over Past 10 Years' captured-sheet='CO2 Emission Over Past 10 Years' id='11' />
                  <story-point caption='CO2 Emission India vs United States' captured-sheet='CO2 Emission India vs United States' id='12' />
                  <story-point caption='Overall Contribution by India And China' captured-sheet='China vs India Internal Factors' id='13' />
                  <story-point caption='Cumulative CO2 and CO2 Per Capita Over Years' captured-sheet='Cumulative CO2 and CO2 Per Capita Over Years' id='14' />
                  <story-point caption='CO2 Emissions in 2020' captured-sheet='CO2 Emission in 2020' id='15' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{5F42F4AC-02D1-416E-B820-B82048DD4891}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='98812' x='594' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='86934' x='594' y='940' />
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11878' x='87528' y='940'>
              <zone h='20799' id='9' name='Total World Emission' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type-v2='size' w='11878' x='87528' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6580' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11878' x='87528' y='21739'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='13' name='CO2 Emission Overtime' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type-v2='color' w='11878' x='87528' y='28319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='36898' id='3' name='Total World Emission' w='37639' x='2598' y='6816' />
        <zone h='37955' id='10' name='Top Countries Emission' w='37936' x='2524' y='51704' />
        <zone h='36898' id='12' name='CO2 Emission Overtime' w='41500' x='43207' y='6816' />
        <zone h='41481' id='14' name='Total Emission by Continents' w='39644' x='44989' y='51351' />
        <zone h='6110' id='15' type-v2='dashboard-object' w='9897' x='89620' y='93067'>
          <button action='tabdoc:goto-sheet window-id=&quot;{DE45BB1B-777D-4304-BCEA-527E8A3B7007}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='24' param='vert' type-v2='layout-flow' w='98812' x='594' y='940'>
                <zone fixed-size='280' h='36898' id='3' is-fixed='true' name='Total World Emission' w='37639' x='2598' y='6816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20799' id='9' name='Total World Emission' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type-v2='size' w='11878' x='87528' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36898' id='12' is-fixed='true' name='CO2 Emission Overtime' w='41500' x='43207' y='6816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='13' name='CO2 Emission Overtime' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type-v2='color' w='11878' x='87528' y='28319'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6580' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11878' x='87528' y='21739'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41481' id='14' is-fixed='true' name='Total Emission by Continents' w='39644' x='44989' y='51351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37955' id='10' is-fixed='true' name='Top Countries Emission' w='37936' x='2524' y='51704'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6110' id='15' type-v2='dashboard-object' w='9897' x='89620' y='93067'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{DE45BB1B-777D-4304-BCEA-527E8A3B7007}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ECC83469-502D-4707-84DF-B182FFA1038C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='98812' x='594' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='86934' x='594' y='940' />
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11878' x='87528' y='940'>
              <zone h='25734' id='8' name='CO2 Emission Per Capita' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type-v2='color' w='11878' x='87528' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='35605' id='3' name='CO2 Emission Per Capita' w='38827' x='2450' y='3878' />
        <zone h='36193' id='9' name='CO2 Emissions by International Factors' w='39421' x='2598' y='51821' />
        <zone h='34783' id='10' name='Emission Rate by Internal Factors' w='34508' x='46233' y='5170' />
        <zone h='34900' id='11' name='CO2 Emission Over Past 10 Years' w='34447' x='46780' y='53231' />
        <zone h='6110' id='12' type-v2='dashboard-object' w='9964' x='89550' y='92714'>
          <button action='tabdoc:goto-sheet window-id=&quot;{B4526846-FA51-4976-B067-FD8ED1FB3D2E}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Next</caption>
              <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='21' param='vert' type-v2='layout-flow' w='98812' x='594' y='940'>
                <zone fixed-size='280' h='35605' id='3' is-fixed='true' name='CO2 Emission Per Capita' w='38827' x='2450' y='3878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25734' id='8' name='CO2 Emission Per Capita' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type-v2='color' w='11878' x='87528' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='34783' id='10' is-fixed='true' name='Emission Rate by Internal Factors' w='34508' x='46233' y='5170'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36193' id='9' is-fixed='true' name='CO2 Emissions by International Factors' w='39421' x='2598' y='51821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='34900' id='11' is-fixed='true' name='CO2 Emission Over Past 10 Years' w='34447' x='46780' y='53231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6110' id='12' type-v2='dashboard-object' w='9964' x='89550' y='92714'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{B4526846-FA51-4976-B067-FD8ED1FB3D2E}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next</caption>
                      <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5003BBBE-E480-464C-AE9C-D6EF82350EFB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='98812' x='594' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='86934' x='594' y='940' />
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11878' x='87528' y='940'>
              <zone h='18331' id='8' name='Overall Contribution to India in CO2 Emission' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type-v2='color' w='11878' x='87528' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='11' name='CO2 Emission from 1990 to 2020 Based on Internal Factors' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' type-v2='color' w='11878' x='87528' y='19271'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33255' id='3' name='Overall Contribution to India in CO2 Emission' w='38530' x='3044' y='8931' />
        <zone h='33255' id='9' name='Continent Wise Contribution by Internal Factors' w='38233' x='3860' y='51704' />
        <zone h='33255' id='10' name='CO2 Emission from 1990 to 2020 Based on Internal Factors' w='37565' x='45954' y='8813' />
        <zone h='33255' id='12' name='Cumulative CO2 and CO2 Per Capita Over Years' w='36971' x='47216' y='51586' />
        <zone h='6110' id='13' type-v2='dashboard-object' w='12175' x='87379' y='92714'>
          <button action='tabdoc:goto-sheet window-id=&quot;{BB94C477-C21C-4FBB-BD99-DF4FD757D5D7}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Home</caption>
              <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#ffffff' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='22' param='vert' type-v2='layout-flow' w='98812' x='594' y='940'>
                <zone fixed-size='266' h='33255' id='10' is-fixed='true' name='CO2 Emission from 1990 to 2020 Based on Internal Factors' w='37565' x='45954' y='8813'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='11' name='CO2 Emission from 1990 to 2020 Based on Internal Factors' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' type-v2='color' w='11878' x='87528' y='19271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33255' id='3' is-fixed='true' name='Overall Contribution to India in CO2 Emission' w='38530' x='3044' y='8931'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18331' id='8' name='Overall Contribution to India in CO2 Emission' pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type-v2='color' w='11878' x='87528' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33255' id='12' is-fixed='true' name='Cumulative CO2 and CO2 Per Capita Over Years' w='36971' x='47216' y='51586'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33255' id='9' is-fixed='true' name='Continent Wise Contribution by Internal Factors' w='38233' x='3860' y='51704'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6110' id='13' type-v2='dashboard-object' w='12175' x='87379' y='92714'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{BB94C477-C21C-4FBB-BD99-DF4FD757D5D7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Home</caption>
                      <button-caption-font-style fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A2BA7019-581D-44E2-8857-6D527DD76BEC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total World Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52109085-5A0A-4E6A-90DE-D0E47B7D8DFE}' />
    </window>
    <window class='worksheet' name='Top Countries Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0322BB2-AB24-4CF0-8787-8528DC92FCA7}' />
    </window>
    <window class='worksheet' name='CO2 Emission Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D46F50B-61E8-456D-AF5D-95C5C56F7839}' />
    </window>
    <window class='worksheet' name='CO2 Emission India vs United States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1C9FB6D-F136-48F5-A807-B06520C9E668}' />
    </window>
    <window class='worksheet' name='Total Emission by Continents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A216CB1-B792-4FFC-A25F-29754F93BF23}' />
    </window>
    <window class='worksheet' name='CO2 Emission Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{508C0F4F-EAD1-4632-B7B6-703E240DB592}' />
    </window>
    <window class='worksheet' name='CO2 Emissions by International Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3235CBB7-CA50-4636-8884-F6E0F2217778}' />
    </window>
    <window class='worksheet' name='Emission Rate by Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:cement_co2:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:coal_co2:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:flaring_co2:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:gas_co2:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:other_industry_co2:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F5DD08A-92CC-4EE7-83A5-B859A5D38656}' />
    </window>
    <window class='worksheet' name='Donut Chart for Coal CO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:coal_co2:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{386D1B95-9F2C-4980-B553-AEB59C692CC2}' />
    </window>
    <window class='worksheet' name='Donut Chart for Cement CO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:cement_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D729511C-4562-4F77-92EF-5422345ED043}' />
    </window>
    <window class='worksheet' name='Donut Chart for Gas CO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:gas_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{192EA52A-BE18-424E-A373-E46A339978BB}' />
    </window>
    <window class='worksheet' name='Donut Chart for Flaring CO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:flaring_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3187D12E-33AD-40FA-A0B5-2B817BD5B3F3}' />
    </window>
    <window class='worksheet' name='Donut Chart for Oil CO2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[sum:oil_co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC95BCAF-4DC2-46DF-9709-F96C0CC15A19}' />
    </window>
    <window class='worksheet' name='CO2 Emission Over Past 10 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59BB1A5C-C49F-4944-9C4E-66E6910869C8}' />
    </window>
    <window class='worksheet' name='Overall Contribution to India in CO2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D80E993-5FE2-4987-9FB7-7B054BF19569}' />
    </window>
    <window class='worksheet' name='Continent Wise Contribution by Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{128DA956-FE8F-41E6-838C-A2B2DD8BCBFF}' />
    </window>
    <window class='worksheet' name='CO2 Emission from 1990 to 2020 Based on Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43813D83-D883-4BFA-BEA5-545B1771D08B}' />
    </window>
    <window class='worksheet' name='Cumulative CO2 and CO2 Per Capita Over Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{923B7000-3138-4529-A98B-690DA75B1A1F}' />
    </window>
    <window class='worksheet' name='CO2 Emission in 2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:ok]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E43D626A-41F7-4EB2-8CC6-524C54F914C3}' />
    </window>
    <window class='worksheet' name='China vs India Internal Factors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53EBC1CF-70F0-43EC-95CD-68EBFA394F1F}' />
    </window>
    <window class='worksheet' name='Overall Contribution by China in CO2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD49C1C9-9F2B-45F4-B985-D323B0849A41}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='CO2 Emission from 1990 to 2020 Based on Internal Factors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Continent Wise Contribution by Internal Factors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cumulative CO2 and CO2 Per Capita Over Years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Contribution to India in CO2 Emission'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{B4526846-FA51-4976-B067-FD8ED1FB3D2E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CO2 Emission Overtime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Countries Emission'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Emission by Continents'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total World Emission'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{BB94C477-C21C-4FBB-BD99-DF4FD757D5D7}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='CO2 Emission Over Past 10 Years' />
        <viewpoint name='CO2 Emission Per Capita'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0v5l7bi1haz6vk15smg1y1lozf77].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='CO2 Emissions by International Factors'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Emission Rate by Internal Factors'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{DE45BB1B-777D-4304-BCEA-527E8A3B7007}' />
    </window>
    <window class='dashboard' maximized='true' name='CO2 Emissions Story'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{211C75F6-44F3-4FE9-80AD-DBCB928E2063}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CO2 Emission India vs United States' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission Over Past 10 Years' width='192'>
      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
      XwIgnO3/A8l4EdkU+zVJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission Overtime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission Per Capita' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASkElEQVR4nO3d2W9b6XnH8e/hrn3fd2uxLe/bLPGMPTGyzSSTIMlFULSdFG1vUqDon9Cb
      XuSmQIHe9aLABAkaIJkmQYIk00lm88RLZuyRZFMbtZASta9cJG7nnLcXThzLFmUPJZGUzvMB
      BvDwPSYfWu9Ph3zP+5CaUkohhAVpmqbZcl2EELkkARCWJgEQlubIdQFiK2Uk+dXPf05RRR0X
      L7+EQ4/hcBeAqeN0OkmlDEw9gak5WRy7Q6ioi2PN5WCamGh43C5SKR2Xy5nrp3IgSADyTCw0
      R6qwgWvXXmZm6BZ/9MdIbERQyQivv36F3/x6gFIjyFTMzdEqxWyBjem+cSLJQhxqg0svXebe
      yAKvf+GFXD+VA0FeAuUZl6eUzdAyiXiMxfk52o6dRUtEMZQimYhjANU1tZQWOKitr6elvROn
      w8nnX32VV689x//++BecPHs610/jwNBkGTTfKBaDk4wGljh/4TTeT+9Q1dJDoRlieiVCRWk1
      ZW6DcFynpameO31eautqaWxuw21L8YMfvsUb3/1rbFqun0f+0zRNy1oATNPEZpMTzn5aCE5C
      cS115UW5LuVAyGoAdF3H4ZC3HCJ/yIUwYXkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWmyMC8O
      D6VgdRXGfRAKgcsFLa3Q1gb27ae6XAgTh8egFz6+DYax9famZnjlGrjdW26WC2Hi8Jifh9s3
      n5z8ADPBB8HY5ne9BEAcDt57207wh3yjEI8/cbMEQBwOK8s7jysFqytP3JzRi3Jl6vzhgw85
      /eLLjA18jK2gnKNHmvEOjuAoKKOzoYThiSBlNc30tDdk8hBCfDY2+9OPsT95TEYBmA1MUFhS
      gWEqkskEngJYW1ik9fgpooEJAgtrnLpwkfGhIUyzDqUUpmmi63omDyfEU9lqa7GFQ2nHlcOB
      UV4Oj83BzxwAZaSYmV8kvB7CNV/DpRevshocZ3YlSnWlSco0cdjBMB9Mek3T0DQNpRT2bRIo
      xJ44cw4Cfkil0oyfxe72PHFzxsugqwvzeCrK8Q8Nk8DBid4eRr1eXKXVtNWVMDgyTm1zJ021
      5YAsg4osmJuD6+9DNPqX2+x26D0JFy7CYw1Z0hAjDp9EAmZnILT+YN2/oQnKykB7skdUAiAs
      TS6ECcuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEvL
      KABKmdy5eYNoQsfn7edu/32SyTh9d+/gHZ0kFl7mzief4J95Sp+mEDmW0f7kpeAkuuYiZURJ
      Ukp7jcaId4T6rl6iUxNMBjfpPXeB8aFBVGMVSqmHbZFC5JOMWiJ9E1PENjcJzpViw/VIs8HW
      poPHWxDk68hEvsm4IWZxZprC6gZmfPfZ0O2cON7F4H0vzqJKjjSUMOgLUFXfRkdzDSANMSL/
      SEeYsDTpCBOWJwEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQlpbB/mTF9MQoy2shyus7WZ7y4iyupqejgXteH3ZPMd0NJYwE5imprOd4Z8veVy3E
      HskgABpVVVUsLK/hcjnRAENPsTK/TOfJM0T840wtRzhz8SLjg0OYpvnwv1S6LzATIkcyOgM4
      C8s43tOGb2aRk+deJLwwycLaJiqWJK7ruFw2Ekkd3TCx2WzYbDZpiBF5KaMZOTc9yWokRktH
      J1PjI8Q1J70nexkbGcJdWUtLdRFDw17qWjr3ul4h9pS0RArLkpZIYXkSAGFpEgBhaRIAYWkS
      AGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkZBUBPJdmMxVFKoaeSJJIPGl2S
      iTgp3UApRTwewzDlK5FEfsuoIWZxLkg4so7y1LO57EfZnLS3NzMeWACgo66YmbUYNnsBZ050
      7XHJQuydjFoiy8tK8funaOuth0QbjVWKcf88XSd6iU6OMx9OceLUKcYHB6UlUuS1DAJgomtu
      Llw4iXdsEc0wCIVtVFYWs7ISJpZIUFrsJBSOEktJS6TIbxmdARIbawRWNujtPUpsbZ71pIP2
      plpmAmOUd3RRU+phzDdGz7Gje1+xEHtIWiKFZUlLpLA8CYCwNAmAsDQJgLA0CYCwNAmAsDQJ
      gLA0CYCwNAmAsDQJgLA02ZtwQCil0BMp1mdWMA2TipZqnB4XmqblurQDTQJwAJimyeTNYYbf
      7UePP9hSbnc56L5yku4rJ7HZ5USeKdkMl+eUUoxd9zL49t1tx7uvnOT4l87JmSADmqZp289I
      pRgZ+CP3fVPEkjqlpRW89MorVBZ7slyiiEdijH5wL+34xM0hWi90UVxdmsWqDo9tA6AnNtCK
      ann9GxdwOuzEouvMLC5SWdwKwNTEMCtrIYqrj7AydR9PeR3dbXUMeMewuQvpbizBN7VEUVkN
      J4+2Z/P5HDqrgcWHL3u2Y6QMlifnJQAZ2jYADk8xk95f8d47b/O1v/oufu8Aly9ffTje0t6N
      oQ/hKnQTdbvQkwmW5lfoOX2WiH+c4Mom5y5dYkxaInctsRF/pmPk3zYzaV+Ue0qq+bu//xpv
      /fh/0AsqufxwRDHpG6Kkrp3qMg9lnvNElwOsRBOoaIzNVIpCj52NWJykLi2Ru1VaV/FMxzid
      zixUc/iknZHPv/g5jGSCo72nqGnpeGREYegmM/4xzJYONldmieHmWG83/rFhSuuaaKgsZMQ3
      SkuHfCLEblU0V1HWWElodnXb8aKqEqo76rNc1eGx4yrQr3/xE9o6ewjMhXjti1d29UByBsjc
      +uwqt37wexKR2JbbnQUunv/ba1S11eaosoMt/SrQnzg18PsDOMuaslWT2EZ5YyVXv/dVxq7f
      Z2lsDtM0qTnSQNeVExRVluS6vAMt7RlgKhCgubWVVCLO3MIK7W3Nu3ogOQOIfLNjU/zo6BBK
      gdNpw+cbzWZdQmTNtmcApRSLU8O88+EdlGbjyhdfo7W2bFdXG+UMIPKNpmnatgHQ4xE+unWX
      U2fP4XHaWZqZYCnh5tKpnowfTAIg8k3aAABsrC9x4+ZtwptJWrp6uXD6KHY5A4hDZMdVIMM0
      6Tp5kY6WetbX13Y1+YXIV2kDcPPmDYzYJlHzK4SD97dshRDisEi7ClRcXM7nv/EdArd+ide/
      nM2ahMiatAG4fPXzDN5+j4jh4uyZs9msSYis2bGVaCEc51vf+jqrM/4slSMOEqUU4Y0E4zOr
      TC+G0A0z1yV9Zjsuy5w51snv373OqYufy1Y94oCIJVK8+dt+PuwPsJlIYbdp1FUU88aXz/B8
      b9OB6VBLuwx6/foHXH7pKprS+fCjm1y98vKuHkiWQQ+PRMrg3978gIGJxSfG7DaNf/72c7xy
      tj3vQ7DjVggtEebd96/z/rvvoNuLt4ytLc0yMHCPSCzJ/PQEI+MBTNNgfMTL9NwyemIT7/0B
      VsKb+/4kRPZ90OffdvIDGKbizd/2s7FDF1s+Sfsr+fK115gNTmPYPTQ3bt1vbncX0XPEhi8Q
      xIwnqCmzMT4yiqOyifBcgETITuORHgK+MarOnNz3JyGy69ZgcMfxtUickakVLhxtyFJFmUsb
      AM1mp6m1ffsxPc5wcJXjxxuZ8EUpKoT55SXaWgvQnE7CBrQWeHA5bNISeQitPdaXsJ3V8MaB
      +Hln9C2R/X0DFFXWsB62EYsEGAo76T3eiXeg72FT/Kcff0xRWY20RB5C9ZUlTMyu73hMQ3Xp
      gWjTlM8FEp/Z7cEg3//RHzDTTJ2W2lL+/Z++hNuV3z9v+ZI8kZGLxxr58nOd244VF7j43jcu
      5v3k/zM5A4iMGIbJ7+5M8pvbPoJLYdxOB6c76/jOtRO01e2udyRbdtwOvdckAIePUgqlHuwc
      1jQNu007EBP/z57aFC/ETjRNQ9PAZrPnupSMyXsAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIA
      YWkSAGFpEgBhaRIAYWkZBcA0dBYWl0EppidG6Ls3SCJlEPT7WFyLoIwUvuEhogekLU5YV0YB
      WJqfwTfpRwFLaxG6u46QWpth017O3OQY/vERyhtaGB0e2eNyhdhbGW2Gq2tqY371QUdQfU0V
      o/cHcLqKaOiuIxp2E0ppNJUWs+yUlkiR3zIIgGJhZorZmVkaGpsIh2MYyqS+poyxwSEAOuqK
      8d67h81eIC2RIq9l0A+gSMYT6KaJw+lCUwaG0nC7XaQScTS7E4fdRiIRx+nyYLc92B8uARD5
      RhpihKVJQ4zID0pBbBVCftCTUFQDZa1gd+37Q0sARG6ZOky+B8FbYD6ySFJUB73fhuL9/RJw
      uRAmckcpCFyHqetbJz/AxgIM/AgSkX0tQQIgcie1AVMfpR9PhB6cGfaRBEDkTnjmyd/8j1uf
      3NcSJAAid542+QGM/b14KgEQuVNU9/Rj5E2wOLQKq6DqWPpxmwOantvXEiQAInc0Gxz9GpQ0
      PTlmc0DXq1DWsr8lyJVgkXN6Ahb6YcUHRgKKaqHhPBQ3wD5+1KJshRCWJh+PLixPAiAsLaMA
      xCLrDI9N/qklchTv8DiGqTPsHWBiep5ULMJAfx8Lq/t7GVuI3cooAAndYCOyjiLOWhSqCxW+
      wWEK6zpIrC4y4Q/QfuwEC8HAXtcrxJ7K6F1peUUVjmAQSOF0FOB2QTweobrAheFwEFXgdjlw
      2KUlUuS3jFoipydGmQnOUFXbTCo2w8iUkxO9nXjv92P3FNPdUEL/J59QUln/1JZIpRTxaJgF
      v494NExJdR21rZ043Z49eHpC7Cyny6BKKYZvvcfd//sZic3ow9vLahu4/K3vUtfec6C+ckcc
      LDlfBp3ou8WtX/xwy+QHCC3O8fs3/5PQ0nyOKhNWkbMAGLrOnbffIt0JKBHboP/dX2a5KmE1
      OQtAaHGOjdDajsfM+rxZqkZYVQ7PAMm0v/3/TE8ls1SNsKqcBaCkshaHc+eu/4r65ixVI6wq
      ZwFwFxXTee6FHY/pvfyFLFUjrCpnAdA0jUuvfYeGzicbIjSbjVNXX6Xj1KUcVCasJOfbofVk
      kvG+m0x5PyW2Eaa0qo6u85+jqfsEmk326on9I/0AwtJyfiFMiFyTAAhLkwAIS5MX5RajlMK/
      usLd4DTheJymsjKeb+ugrKAg16XlhLwJthDDNPnv2zf45f176Kb58PbyggL+5eo1nmtts9Tu
      292/CVYKv2/wwbdEJnX8vmFmFtcwUnGGvPdZj8b3qFSxF37ad5efDfRvmfwA67EY3//d20yu
      ruSostzZVQAUML+0SktLM4nVIEZxLaszAfwTY9S1deIfH9ujMsVuxVJJftr/adrxhK7zk767
      WawoP+z6NcnRnh7m/D503DR1N2BfdRHWoaWoAJdDWiLzxfjiIhvJnTcXeudmLfcz2mUAUgSn
      ZojEEnR1NzIy0Ifm9NDTWMKnH39MQUmVfEtkvniGq+qGUjidziwUkz92NSM1zcWp8+ce/n9t
      bcPDP1c1HtnNXYs91lZRidvhIKHraY85WlObxYryg1wHSEMpRTy2yWY0Sir19N6FfFfi8fDq
      8RNpx+02G988fS7t+GElr0keo5RifXWFscH7RELrmKaJ0+WirqmFrmO9OD7jSwQjliAyFCCx
      sIa9wE1RdzOexqqcLDe+cel5ljeifDQxvuV2t8PBP75wmZMNDWn+5uEl1wEeoZRidXmJ/ts3
      MAzjifGKqmrOv/gSNrv9me5vY2KW4I9+R2r9L03/mt1GxQu91H/9MjbHs93PXtJNk77gNLcD
      /gcXwsrLeaWrm5byCktdAwDZDfoE0zS58e47xDaiaY85evIMrZ1dT72v5HKIsf/4KWYsse14
      9bVz1L32guUmXT6R3aCPiYTWd5z8AAuzwWe6r+UP+9NOfoCV6/cwNuRCYa5JAB6RiD99Qj7L
      MQCbE3M7jquUTiy49Ez3JfaPBOARnmfYEPYsxwCox7YbbHvMNu8zRHZJAB5RUlpGcWnpjsfU
      N7c+030VNNfsfIBNw9NY/ayliX0iAXiEZrNx/PS5tEudNfUNNLa2PdN9Vb18Gs2ZfpWn/HwP
      zvLijOoUe0dWgR6jlCISCjE+PMj66jKGruMpKKShpY32rm7sn+E5rH0yzNxbH2Imt159LT7a
      QvPffBFHoXwCdi4dumVQpRRrsU2m19ZwORx0VlXjyvAxlVLoegplKuwOBzab7TMvWSqlSC6t
      s35nlMTCGrYCFyXH2ig50Z6TawBiq0MVgEg8zn/d+Ij3x0Yx/vSUSj0e3rj0PF85fgKbrLeL
      xxyaAMRTKf71N7/i3tzsE2Ma8A8vXOabp8/IRSexxaG5EPbBuG/byQ8PmnZ+/OknrG5uZrco
      cSD8P8ab8z6UL7BvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission from 1990 to 2020 Based on Internal Factors' width='192'>
      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
      p6/5/6dCI1k5EteZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission in 2020' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CO2 Emissions Story' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='CO2 Emissions by International Factors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='China vs India Internal Factors' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAASvklEQVR4nO3dS3Nj6V3H8e85R5ejiyVZluWLfGn3xd1texjCZGCYAAlUJVRBKlVUUdmx
      ZUOxYMESajasoFizo3gBLIAqlkkgVDKBTCY9Y7ttd7fvlmVLtu73c57Doqednml323Jbluzz
      /2y6Les5z2Pp+Z37cx7NcRwHIVxK73UDhOilrgagUql0c/FCvLWuBsC27W4uXlwzzUqBjz/+
      KYf5168Y7VaDUrV+ZW3yXFlNwvX+60c/4oNvfxe/VeaHP/gBA4kxnEaVaECnUm9QtyHkafOz
      lSMWZlPQaqD5wsT8cOud9wgal98mOQYQV8ZWCkPXyW4uE07Ns7O+wt7uHrnMHpn0LlN37qAC
      Ce7OPiC3t8W7739IM59mbT/flc4PEgBxhb71rd/j05/9BCMxi51b48HCe9yeHsE2Y9yZfUgk
      FGJy8hamlWd6doGg38PcvTHMgbGutUnr5mnQYrFINBrt1uLFDdJqtfD5fK+8vvH0CamZu/gM
      rSv1yhagy5Rt07YslFIAOI5CKbn08lX1+ukHvjN373Wt84McBHeVo1o8+vQzYskxVLOKLxAm
      GQ9Ttz3Y9SKafwAfLUoNxfhIotfNdSXZAnSRXc8TGr7NzFSKVrOJp1lm/6hAoVBk/6hINrNH
      /ijH5598SqPXjXUp2QJ0kRGIU83+kjW7QiA0QCRokG2DpunEYjGsZp18PseA34/V68a6lBwE
      i77Qq75ysgWoVCqXeuVWKUWtVpOrweJc6vV6T/rKSQDC4fCZb3Ych9LRAb7oKHb1iPRRmbsz
      U+xsrhMfnURz2nh1sHU/Qb8XXddlCyDOpVdbgI4Ogh1lc7i9ynEDNrZ2iXsbfLb8BG90mO2t
      TQ4PD3j2bAOfVw4txPXQUQB0w8NIchgAn1cjU6xDu004FMRr6JSOD2kqD4bWvfO2QlymjlbV
      ttVgK1PArmwyaJq0aw2mZybZWltmMDlBLBbBrzsUqg0Gw2a32izEpZGzQKIvXItjACFuGtcc
      rdb+9c9RubWOy5l//Pd4Jt7vQotEP3BNAJxGHqeW67yg3b78xoi+IbtAwtUkAMLVJADC1SQA
      wtUkAMLVJADC1SQAwtU6DkC72cBSoGyLfD6PchzKxQJtW9Fut1GWhWWrbrRViEvX0YUwZVus
      /OK/iS98h/reKt7gAE6rzkGpgcrkCPg07EaD1J0HeLr0ICMhLlNHAdAND9OTE5SBQqFIWFlk
      Mg4L7y6Q3tqgdHyI4xsi4NWxbRulFJbVH6NdL3rLn23b0Cd/w03Wq77S8e3QG9sZWtEgw4k4
      pVqdydQIq8uLDAwmGEpO4HEs8tUm8bCJrut4PP1xt4WmwUUyYBhG3/wNN1mv+kpHNRoek3c/
      /INXXh9PjV9ag4S4Sq5ZtZl/+HfQ7vyx23r8dhdaI/qFawJgJGZ73QTRh+Q6gHA1CYBwNQmA
      cDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwtc7mB3Ac9tZXKDcBx2F1dQ1HtVl9
      vESuUKFQyFMtHlNpyNPUxPXQ0c1wjlLQKlNqQTu/S/qoyGBwl8TkHbJ726BatC2N+YVBlFI4
      jnMyP64Qb9KrvtLhiDCDgXCIMrCzl6ZZLpArmIzFNTTAVha28uAAL6bI6OLT18UN04u+0vGI
      sJ1sDae2yTu/8VuM5bIMx6OsrKwxNDaFR7MwPRrlapNY2ETTNAxDBgeLs/Wqr8gEGaIvyAQZ
      QvSABEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLhax1Mk
      Lf38x4ws/D6qsEk2e0xiNMX+/j7ReBK/x0a324SHJ4kEvN1qsxCXpvMpklIjlBWMjaYoFcsU
      CiXuzz2fIimXy4J/iLFJT99NkST627WYIslRNqVyhapRZmXjCbGRSUynwV46TVtBJD6CVa9T
      a9mE/J6+miJJ9LdrMUWS4yg80Qlinib+iSlqzTbBxDjDpTyhaAqUjcfQaNvdaq4Ql6vDXSAv
      o+O/mg8s9sW/5lDii/89H9Lml1GQ4pqQs0DC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQA
      wtUkAMLVJADC1SQAwtUkAMLVOg5Aq16lbYPVapA7LgAOx0dZWpZNq9XCbrdoWXI7qLgeOh4R
      tvboJwzOf5vK9lNMv0b++Bg8Xvaz6wT8Ou16nel7D7vVXiEuVccjwqYmUpQBzecnNTHIxz/f
      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
      zfWg4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Continent Wise Contribution by Internal Factors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cumulative CO2 and CO2 Per Capita Over Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      jf8P0/CjEfMXyL8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9129kWZrg97suvA8y6G0mmcn0VVm2q7q6u3p6pp16erp3gN3VQHrRAgL0
      rgcJkGYHWED/gB4kQdpt7O6MhJ0eU13VpryvTleVPpNM+qAN7yOu10MwmWTSBZlMy/gBBK85
      59xzb5zv3u985zvfEWzbtmnS5IAiPu4KNGnyOGkKQJMDTVMAmhxomgLQ5EDTFIAmB5qmADQ5
      0DQFoMmBpikATQ40TQFocqBpCkCTA01DAmBbFrVqFdOyADB0nZqqcteLwjJNqrUa1qpXhY1a
      q1GtVqmp6pblGrrOdo4YhmHQiKeGbVtUq9X76rBdehtNVdE0nUb9QGzbwjDMBlM3eVrYUQAs
      U+WD997lzsQEM3OLpOJ3+PDzc9y+cY3Pz1/G0CpcOH+e8bFR3v3ws5VcKv/pV3/L5OQk8YXl
      Lcseu30Lc5sWODE6irpdghXs6hK/+s9vMT52m9+//+lOqbn5zTkuX7/J7dFRDGv71F988SUA
      WiXPxMzCjnVp8nQh75Rg/tYlWoZe4ORgCwC//c1b/OlPf4YswO/ffhvb8Rwvv/oqtVKGm3dm
      VvOFWto4fvw4AJn4Lb66ncZtF1ACrej5FMdf+R7FfBHbVnn/vU8IhkIcOfEcV899jNMXom/w
      KIVSAcG2+eb8l+iCDLKHY+0O3r28QHcQPC1DnBjuAqCtq5eTJ08zM/sOpcwCF69PYeoqr73x
      bc599hHx+AI//MW/JuqBycUc/9VPfgiAoVe4dPEG5XKeodOvcvP8x4Rj7aSzJV44M8Lly5fx
      +AKMDHaQLZQpZhLcnpghly/xxne/g1NuapFPMzv+eoVCEa/Xu7qvWRaSUN9WBAHDhvid6/zz
      7z/lxz/50Wq69NIcly5d4vb4NLpapr33MMf6W/BG+zjaF2YxVaaQz2ObOrl8iWhbNz6XTC6b
      wx9sIRL0UijmsewqC8kaL734EtnlWTS1TKx3iJe+dYbZO9Or15ubvsPFixfoGzrGF599idPj
      QqgkuTq+xO3bE/ziX/4VLX4HtmVgrb1tC0zLQLAqjI3Po5oCzz9/lp6AQNpwM9Dfz3OnTyDZ
      OoVSBdu2MC2b9MIM6fLW6l2TjaSW4ly4eIlLly6RLVY3TaNVCiwmc1sXYmrMzC81dL3ZyTEu
      XrrEVHxxU1XaMIydBWBw5CRj177Bsm00TaM36mdyMYuhVSlZAnI1y6eXxvnLX/4cv0tZzRdt
      7+bs2bMcPdy/bfmW4OQnP/0JQn6Gczcm+d6f/pRWn8UHn15YSaFgmTUsy8I0bQSETcvp7h/i
      hRdf4uSRQQJ+H32HR3jjh3/B6cEWegYO4XHWP3ai7EYxK5RVA13TGL96gUDPCIf7u8C2wbaw
      bYtUvkTI66zXcc3DO/fHC5x6/iwdraGdHl2T+7h95Tw9R89y9uxZwn43uq5TrVQwDLP+37QQ
      JAlFlrAti3K5jG6Y2LZNpVJG03QQBByKTL2fWUVVNQB0Xa/va/rq9b65co0zzz2PujzKtekU
      lmVSLpXQDRND13jrrd8g/fVf//Vfb1dpxe0n6DAZG5/ElhwcGTnG0swo8YUkL7z8MpJZI1+u
      kkknyRSrxFoiABQySZaTKdKFCu2xVlweP36vG7fHj8/rwu31E/C7CQX9jN26SUmXOTEyxNzk
      GIlMmROnTuDzugkFI7SG3NwaG2fo2GmCfi9Oj5+Ax4msOAmH/YCA4vQQCfkB6OrtYfzGNRLp
      LJGWGG63k3BopcEKAv193dy8cZ10rsjQyDFm79zGlt10tHcQn7hFVdVo6RmiuzWE3y0xMbtM
      rC2G0+niUF8Ht0bv4AtG6ehox9FUgRpmduImzmgPiq0jyTK//n//Iy63l/fefx+P28XFKzfo
      aXFx+U6C5YmrFDSTWk0nMX2TyeUCNVWltcXDZx9/jVsocW1igaXpUSxPCx++/fdITi9ffnWO
      4aNHEAUYvX2L4aMjqLllCgRw6HkWllP88dxFujtauPjN5Z37AABt3f20dfev7h87+dyas06+
      +0bLfTlkXnn92+uOeADw4l3Z8wGEBgA4efpeeUeOn1zdDvvr12zp6KGlo2f1eNfK/4GBTgAE
      xcfhft/qeVFy8vyLL63uD/T3rauL4vLx/NkXVvdfevle2qWBIZ5//uzqfnvPIO0rl+7rqtf+
      pZYOmuwB22J5cQHDLdDTP0AgEmPk2HGmpqdX/9+lrb2NeCqHxxMg2trGwvg8ute7ajUcm4zz
      6vd/hEtL8ftzY3iDLRw/NsL8zBSWDQigVYu8//bfU1Ta+Bc/bOfGN+cpmxLLiQS+UJSOjo7m
      OMD9nH3h7M6JmuwNQSTW1kFHRzuKtH3Tk10+jh87xq0bV7FEhRMnjjM/cRN1xWrX29nCrbFJ
      bty4Rf9g/6ZlONx+/uSn/4KYkOHGxDzTc4scHuhFWDF+26aO0JwS2eRRUcpnWFhOAdDR3Ydt
      qAQCAQqFwup/n8dFRbNwyTAbnyfW2Y3HIRGfnSUQbSMccFMoVAgEvCSXFrBkD20t4dUyioUC
      Pn8AQYB8Pk8gEEQQbJLJNAGfi4XlLJFIkIDfT61caApAk4NNUwVqEENXKZU3N901eXppqBN8
      4LF03v3D+xw5eZpa0SZdtgh6HLgUGQODpaUMajpOwdvHUMxFPl+mb3iYUjZHe3vscde+yTY0
      BaAR9Aq2M8ihvm7eeecdgm6Jaxmdw50Bak6wihq2LdHV28tn7/6aN7/7Kh+8/RY9J75Fe/vj
      rvyTgW3blEql1f1KIU2+Bl63k4Dfty5tuVzG4/VuMeJTR9d1FEXZJsXWWJaFKNaVn6YANIIz
      QFdI5urNO/R0tJKrmAwPyqRSeXo7usBj4PR6mJ+Pc+T4Sdq6h6h8/BXHDzdb/10EQcDv96/u
      G8VFrl6boLunm1c615uVM6k0sfZ2RKBWLWPYIm6nA0EA2xYAm2KxiNvt3lNdHpkA2LaNIGwn
      x08LAmdefGXHVD299f96tcRLr7+JcwdT30FG1zTCLS2EQ/4N56rVu30tmxvXrtLee5i0WsZU
      a3T0D+F2SEiShCzvrfkahrGa96H+Qpa1g6vlM4ri9nGov/txV2N3WCZUq2A+Gpdvf6Sd1NIc
      ulpbPVbNJ/jHf/gn5u76AtnQP3CI5NISlVKOgmrjUqR9rUdTBWoCuRx88iFkMuD3w7e/C21t
      D/WS5ewymi2wsLDAiWNHgfrAVFXVuPdNsMjn87h9PiIhH4pgUayqBDzOfatHUwCawB+/hHS6
      vl0owBefws9/CeLDURBsy0Dwd/KdF1yo9r0mKLt8uF0++nvb6x1gQWLw8FDD5RqGRaZYRTNM
      VN2gphrUNIOKqmNZoK9MaLrbB1BkqSkATYBcdv1+oVBXhR6SAFi6yo1bo5w9fZxL31xhaLDu
      q2XqGrn0ElduyAwODGxrBdqMqaUcv/3jHRyyiEORcTtkXE4Zj1NBEAQcSv1+BEFAFAVqmvFw
      R4JN00SS9ldna/IQ+PRjGL9zb7+9A370E9hHA4Zt2+j6PVfluakxxmeXOHbyOWKRNUrPiuCJ
      O1y7VCrh8/m2TbMVa9vlvgiAXitzZ2aJtpYgimAjuIP43Y6mADwtqDU4fw6WliAahZdegT02
      rq2wbRt1k/nhk5OTDA4O7rq8crm8bqLWbljbLh9YBbJtm/jcImCRTixQMWROn2jBNE0sy2po
      UnuTx4wkw6uvrT9mGOuTSNIDmbQFQcDlcm04btvWpsd3Qtf1PeWD9WbQXQmAVqswPj6O6PRx
      aLAfRRKxLQNd11hcTtLX10vQUCmrBr6V2WHNL0CTzbBMnStff40n2rmrfLZtr8wONDHuE9KG
      r21Zq3kbVoEs0+Di+XN09A5gqWUSeZUXnzuxel7XdQQBJFHEMG0URW6qQE22JDF1lQU9QnZh
      gu999zvrztmWSXxmGk8ohq0WsGQPXpeCLNrYshu3Q6ZYLK4bWQYwLYtSRaOqGeiGiaqb6IZJ
      VTUo13SKZZWKqlOpaSjKLr8AoiSjqyW+vnyDl0ba6D9yat35tX4ZSnMAtMl22Da+WD+1y1do
      XTPT795pm2hrjPjcHJLsQbBTFDDRdZsjR49iWdbq31ruxNP80+e3cTsUFFnEqcgoiojbIeN1
      OfB5HLRFvDhlcTUcz65UIG+wlZGRFn7z9m/58b86tXOGJk02wVRL3ByP88q3Xufc+XPA+k6w
      bRnE5xYZPDTA9MwS2IAItmWzMttxU4Z7ovyP/+q1Lc6uuf5eO8GnT5/mj198QtfgCcJ780Nq
      0gTJ6UOqZXjnd79jYPjEhvOWaYBtkcqUifgUTDmI16XgkAVqqo7P7UAUxVWHtt2yZ2c429Ao
      qRZOu0RZh6BjT9d/JrBtm/R0gvlr0/hbAvS9OISkNMcVt+J+d+i+Q0foHXbgkCWKxeKG9F3d
      d0MfOFbzq7oNqBSLKpVKZc912fMXIJ0v8dLZMywnsngO+G+dnlrmq1+9j7USWzG3mOG5X3zr
      GfF+3X/ud4fO5hd5+/NrnDl1ilPH1rs7TIyPM3D48I6emvd3ggEqqs4fb8xRqemE/S4qqo5u
      WBzvb6UnFkQUhb17g47euo4lKGSWZqjuzQL1zBC/Mrna+AEWrk1jaAf8oewClz+EoJWYjs9v
      OOfz+Vb1/Hx6mXxZpVgqUisXqKpbP+NbM0n+5j98QqmqEfa7yZdVREHA73Hy2z+O8ze/+oT/
      8vFNkrl7X4+G3+O2ZXH0yDC3blyjbeA4kl4Cx/6OFj5NKK71+p/kkBHF/X3727bN5EKW9y9N
      IksiP3z5MF0tgX29xuOimE0QiHXjdtx7B9u2RT6XI5PN09ped4jTqkUquoJeWEY14OjI1lag
      vrYg/8t/+wYux8Zm/dqJbqqqztdji/zv/3SBs8Od/PDlw7tQgQQolGu0t8UQMUiksgx4fYBN
      fHqSkgot0QAOwUL0hPG7n+0OwuHXjlHJllgenccd8HDiJy8gyvs75nFrJsXf/OqT1bfeJ5dn
      +Hf/5k16YsF9vc6jxrZMVMHD0f5OLPmeNaWcWeCLc7do67w3OBYIBKlUQJBE0Exsu24F2kzV
      3Kzhr8XtVHjtZC8vHu3k3QtT/G//+fPGBUAQRGItEUzRiUcBFM/quba2doozC2SSi1QNmdMn
      Ys+8K4TscfD8X76OVlWRHTKiLGHu82SSS6ML6z75+bLKtYllOiJ784F5EB7UFWItlqmzsLBA
      TTPXjQPIDhdarUQuX7ibkqVkjpol09nRjUsRUFUdr9ux4tG5NyuQLIn87PUj/Oz1I7vrBH/9
      9UUKhSpDAzFCg6/Q5gVsm6tXr9HZfxitpuDUVYo1ncDKF+BZHwmWH6Llp78jvG5fEKCvPbTn
      qYBPCpZeo6KZ1CpFgoEVNdoyGB2bRMCuB8EFQKTv0PoO8t6mwW/NrrxBJycmCHoV3nrnXX75
      V/8dASdg25TLJSxE3G4XkiBg2jayJDVdIR4Qw7T4v9/5hg8uTSKJ9bfWv3zz+PZvYtuG/Cws
      XQbJCd0vgTvy6CrdAJZpcPP6VTQT3P4wI0MDuy5jM1eIRllrBdqVAFh6lfc//hzF0jn7vR8T
      2EHNbwrAg2PbNuWajigIuJ3yzmpIPg6X/z1YK6qTKwQv/PfrVNYnidu3b3H06Miu8+2XAOzq
      WypIDvwumYrpqfcD9kB2eZ7EzAShWAexvsNNu/kOCIKAbzcGhcT1e40foJaD3DS0Htv3uu0H
      lrWx32QaKpMTUyieAHatiCl7CPpcSLaBM9iK17l/KuCuSrpy7Rqvfvt7TN34hpIOoV0aeqav
      X+KTv/s/MA0dQRB47gd/wek3f9oUgv1E2cRHRX7y/FbUcpb3PvwMf3RjqHlRctAaDZMtlbEU
      P5JZI5lIo9suTrW2Y5rmvrlD76ob7bBV3nnnHW7N5/Hv4Qtw5cO3MY16B8e2ba5/+vt1YTEO
      AvlqlblcFuNhhYzpfAG8ayI6xE5CsPfhXOsBKCTnsRQv1epGlwatkuPWRJxAMEytkKZUU/H4
      QgScUFYNJOleXKC9/ImieG9/N5U+duZljp3Z+03fbfx3qTs97b+Z9O4yqIah4/F4ERowl9mW
      jZYpIMoSctD7UL5K79y4zv9z7ktqhsHhaAv/649+QsSzzyZNhw/O/pt6X0ByQKALhCfLP922
      dHRXjJh7gaqycakpxR3g1PGjSIqD4aNHVucIi4JQX/xiq3JtG1U3qao6mm5iWjZVTaemGpSq
      GsWKRkXVUTUDw6pPrHmk9rSRV7/PV//8H1cb/eGzr6G49vfzbNs2MxN3mLh9E8s0CUainHnp
      VRzOrWPJmKrO3H96l+LtWQRRJPr6Sdp+8irCPo7sZisV/q+vPkdbGSu4k0ryd5cu8j98+zs7
      5NwDkgMih/a/3H3C0mrMLyXoGz7O1NT0hvOiKOHdYk7ydiaVG9NJ/vHTW7idCg5ZQpIEXA4F
      t0PG53HgdzuIhb3IooDToSCJwqMVgKOvfBd/JMrixG3C7d0MnHppxzdtrlrlH69eJlEs8urA
      AN8e3L7jXKtUGL95fXUALp9JMzM+xtCapZc2XOP8LYo360u82pZJ6pPLBE4O4unfv9ie6XJ5
      tfHfZalY2CL1s43k9OE2S3z9zQyHRh5ApbiPEwMxTgzsHI17z1agrUgsxNEEJwGvC4cEhuja
      1HIhCALdR07RfaSxyTSmZfFvf/82o4kEAJ9O3EH/nsn3h49umadWrWwYfa5WytteR8vc1xBt
      0DLFfRWA3nCYjkCAxcK9a73c179v5T/pbHCHHj5O3zAkEolN3aF34rG4Q2+KpVOoWoh2gcVC
      Ek0XOHZ8ZLWnXZ8rXH9jrw2Wa9s2oihi2/am25ZlEc/lGFtp/FCfGPTB6G1e6+1fTQOs23Z5
      vMiKgrEmBk0gEkXTNCzLQhAEBEFYt+0YaMf+7CrCitwILgW5K0KtVtux7oIgbHsPa+v3P735
      A/720kWWiwVeGxjkB4eHqdVqG+5hs+3N6r3Z9mZ13evzX3t9RVEeaEznfnfou8zOzuzKnr92
      Unwj0aEt26Zc1amoOoZp4fc48Lod+ygAgoBpGli2heJwYZs1TNNGkYRV/5Hd/jB3G1XQ66lP
      sl9jMQl5PCiKspqmXoX12y+89h0mx26hqTXau3rp7O1bTbPZNUPHB5D+6x+Q/eNNRIdMy5vP
      424NN1Tfu2x1D2vr19/Syv/8wx9vWe/ttvfyDB9k+/7r79XvZidisd3FIBUEYZ0VaC2JbJmP
      L08zlyxQrmroK+7qbqeCx6UgSwKlqk6hXEORJVwOeX8CY+XSCXTBidel4FQkakZ94YMHHQm2
      bZu/vXSBv/v6IpZt0+L18u9+8uf0hMM7Z27yxGIZKu/+7h0qOgRbu/n+t19af97UmZ6awhtq
      xa4VMGUPfo8DWbDB4cPj3DwqRKZQJZ7I090awOt2IEsikihseFnphoFtPyWhEW3bZi6fI10u
      MdzahsfxbLtZHwQsQ+Wbi+eYWUhtLgCWiVqtMDs/jyR7ESwV3aihmzLHjx3Btqx9C434UK1A
      +7U+QKc/QKe/PhHkfpfjvSzC8ajy7JYn+V4exP14Y1kimUwWQRSRN5lDYRkqM3PLDB0eZHxi
      DsE2cTjd2JUapmUji+ID1WetSvdQBUCSpF1Vcm2nbjd5dvsgHkWeZ+le7ubZLyxTR3AGeO3s
      CNdujm1MYIOAyXKqSCzixZI9eJwSDklE1Q0Ul2PXz/Z+7uZ95OsEW1qFsck4itNFf18fu1lF
      qFQq4vPtbDEol0totQrlqka4JYbX1ZjaNDs9QbWm09k32NCMNq2UoWC5UYtpuroaWxFmaX6W
      QlmlUinSM3CUaHBnL814PE53T8+24cJNQ+Xm1evIvgCCIHN0xcVYLReYii/icHsY7NsYhCo+
      PUGlphLrGiTsr8faTCaTaNUSoitIR+xhuFLbZBILTMwuceTYiT0tePFYvEH3A8vUyRcrtLk9
      u46+3aioejxeCtk0NgJqTW9YAMqlEoqsUK6qDQlANpNmLqvS3dW1Y9q7WKaOKCsoDge5TLoh
      AUCvcOPGLXr6Bwh6Nw8IK8lOOtpaSNcsdPWeCbhWLWKLMuXSxrGQUj7L7NwSHe1hksksYX/d
      Ma1SzGFKDqTa/q2LfP84gOIOcPRIgFvXLzMysntP1SdnHGCX6LZEf08HiLvvHDfa6REEgWIh
      z2IiSf+wh0ioMX+btrY2ssUKQV9j7hmeYAvtUnnHWPZrcftCtPgDyLuYYpjL5ymWK2RCrVsK
      AIAvHCETXyAcuffWdrp92EYeWZIolGsE1uT3+oMcHxkmmy/R0X4vjyRJVDUVt2v/msdW4wBd
      Xd0PdRxgM9aqgI/cS0qWFarlEuVK42+XUj7NnckZkslkw3ki0RZibV2Eg41bChbmZyiXCqSz
      jY1MepwyifkZUulUw9cQjCpXr99iOZVtWAC6eg/R1tZGKLC9IGeXl/C3tBEO3mtQ5UKWSHsv
      2AaL87Pr6yKKLCcWqRZzLCfyq8dlWSGbXEaUH57FrZRdpqLX1drdcP84wIN6gz56N0GtyOxS
      gnK5jNFgv6pYKLI4N81yKrtz4hWS6QxdXZ24nY37bbd29BHyefB5G3yzCBCIxHbVGXN6g3S2
      taA2qF4YaoVbt28hIJDPb99YIm0dGJUi5co9F/NQSztTN78G2UPfJq4X/mALLbEYXZ33vgCm
      IPLKq68jWFpjN7UHvv7yQ9757e9IFdYvmlHOJbh85SrT8SUALl86z/TcIrOzM8xMjFHeJi7Q
      XnjkKpDk8nPy2DHK1VrDUaQVh8KZF17ZVaiVcDDA8vIybZ09KA2GK0knlpBlBaemAzsvviBI
      TkRRwN7lb2LbdsM6rKS4aGuJYNoisZaNrsNrSS8tMLGYJhwI0hqtp80kFsEdQrA0XM6Nz69a
      SKPiwOmP4HbIWIbGwvw8+Vyezt7dz9VtCNtC8UaRsxVc96kx5WKRQyMnSc5NAjbRSJREMoXH
      YaLZLnod0uObELMf2JbB9Rs36r45DeZxudzMTt5hMZFu+DrBcJRIwEXqfke3bfB53VQ1A5er
      MauEbRksLS0TbW1t+BpqrUKxVMLrayzAlSCKaLqGppVJJbf/AoZaYxzu61nXB4i2dRF1Czi8
      G4XHti3cvgB6rbpqYBBlB36vh3w+zeLCUsP3tRtMtYwYaOcvfv7naIX16mMw2sL06DXc/jDF
      QhHdtHC5XYRb2umK+ihUtcc3IWZ/EIhGI3W78naxrlcw1Aq6LREKhXA6GldnsukUhmXT0tJ4
      EKlarUa1XKBYqhD07Py1EUSJWCyGWq1CuLEGXSmXkWWFyg4eqnexbZtQMES+VCMa3fpeLFOn
      VFFRFAWH655lKZtcwBfrI5uYA9b73SzHp0kXVWq6va7j397Rhdfrwel7OC4notOHjwrv/PZ3
      HDn5/LpzTk+QkyfveQv7A41HwkvlK9ycTmKuGbMwLRvTvGc+lGURSWBVK3jkArA4N002X6W9
      rbEoBbLTg5aeYXEphT+gEg031qBTiSUUX4QQjQ9zRGJdDI2cZEepvIsg4vF4qWgbF3/b8hqR
      KLn4ArH2xsYN4pNjOMPthOwko+PTvHBqc1dwQRDJLi0Q6h1kYW6OcHAE2zTIFWto1gIuz0ZL
      S3vvIG22TSmfoVCurgpBJrmIL9pJ0L9/s9XuN4P2Dh2ndyXkz365Q+fzZRKpDNKaQT5RFNbt
      VysWumGszix75ALQNXAEW5rFEuWGxwFEUSEc8mMLjenylUIGb7QTQa8g7sIXKbUUJ5XO0N3b
      31gkBruuRlQb1Odty2R8coqu/kEW5+dpCW89r+EuLpeLVGIJDJW+3q1neQmixOCRIcan4gQi
      0foxSSbWEmJ6KYexSR2LuTSz80vIkkhLR32tXrVWw+3xsBCfxurup32HfkejbGUGfRDuL8/v
      93Ood+c5HGvHAR55H8AoZZieX6JYLDZsBZJEARthy2ly9zO3lMQvFHFHu1leXGi4brH2TpwS
      6GZjX435+Xki0Rb8/sY+07ZlEgz4uXX9OpKzsbdra2cvI0eGGTl+ktYdxjOS8wsspXNkVszF
      tm0jK05kcfMVGn3BCJIgMNjXRnqlryQrMl6vD4/H07Dx4GljrRvIIxcAXXBwfPgwhgVKg8+3
      XCygGY2rMq2RENmqQCFVb6CNYls2tmVSrTUWqcLtkPj4448bFkxRdmAYJmfOvsChvsZWR7zr
      87KTqdW2bUKxGEMDPYRX7tlSS6SrNkePDHN4YGNkCEEQ6O/rYmI2TX9PfSqhJMksJdP0Dwzs
      OO7wtKBVS1Q1k3Ihy1Iyg2WoTE7N1l8Qj7oyk1NTVKo6kaAPzQRnA0LQ1tlFbW5x3UJ82xFu
      aSPcsruJFnPxOF3dPfg8TvJaY+8FTyDMa6+9hiQ33jm3LYOFuTn8wTBtLfvXybRMjRuXr+Jp
      60Ct5ujtasO2TKYnJ6jmQzjcPvq6N8bgmZ4ex7ZczMwmGBqsqw+GVmMuHifcEiMcePpD4C/P
      3MaIHkNNJ5BMg1TSpivq5co3Nx79F0CRRBRFoqabDV98fn6Orr4BUsuNqzO7RRZMbt2+zdjk
      LI4GrU0erw+/34/H3fiCzdFIFGMlcvZ+IslORk6MIAHBYF1vl1x+Xjr7HENDQ5s2foBgMIKq
      1QiG6/q0bdtEw+GVOj4bkb3b2uqCHfS5SKSyKE4nyXwVQVcf/RfgyLFdri5p24TCUSZvXqa1
      b+dO415p7+5n/6bAb01NU1E1A7VSBKL7Vq6hqxjI+DxuXJ76W1sQJRzbvGV0tcLo6DSdXTE0
      VQO8zE5PEA14qCoR0skFoqH97bg+eizmEjmqgoHHL9M5OEjEq7CUSHPo1LHHMQ6wO9TcPAsZ
      HV30kl2eo60By8mTjMPhRK0sYHj3V7WQFSdOpUayWkWQGxvIMy2B4ydHMC0IrHSwfR438aUU
      qp0nHNofC9DjRWTwyMaVKIOR+uDlEy8AguLG0stg1pAcT/9cYIdDQRQk3J79j6D4Pp0AAB7r
      SURBVNeZSyXwhKKEGvRlUhwOLEMnly/h9AbwuBz1keO2xt27n3aeeAFw+KKcPLZ/qsLjxjQt
      Dg8PU9tnpy7T0HB4/MwvzqGFWhjo3VkIJEkik83T0dWNu8E5E88aT1bQyAOAw+miWqmQSTfu
      19QIoigjCgKHj4zQ29VYb8ayTNrb26hUq89Mh3e3NAXgEWOvTObwePd5wQpBQJbh1s2bLCUb
      E65KsUA2X6RSzJBI794d4VngiVeBnjXcvgDdvgDx+OzOiXeBWspS1BycOnEMocFo0LZdF0YB
      EZdrv1ffejpoCsAjxNSqTM7MASDs82wry9RZmEugVny4fUHaW3eezO4PRfGHnp3+1V545FEh
      mjwcLMvEsgXk3YTZeIp5kKgQa2l+AZ4RRFFqduj2QPOZNXkqcW6z4MluaKpATQ40zS9AkwNN
      UwCaHGiaAtDkQNMUgCYHmqYANDnQNAWgyYGmKQBNDjRNAWhyoGkKQJMDTVMAmhxomgLQ5EDT
      FIAmB5qmADQ50DQFoMmBpikATQ40TQFocqBpCkCTA01TAJocaJoC0ORA0xSAJgeapgA0OdA0
      BaDJgaYpAE0ONE0BaHKgaQpAkwNNUwCaHGiaAtDkQNOQAFimzs1rV7hy7QaaaVPMJrl06RLj
      M/MAqJUiV698w7Ubo5groUaX45OcO3+BS5cukc5XNi1XLWWZjC9tfWGzxu2x6d3dEXD98jfo
      298Rs7NzG44aWo2qtve1u0y9RlWtX3lsbBTD3MVawLbF5cuXV3evX64/u9vj09tmK5VKe6lq
      kxUaEoAvPv6Alp7DjAwPglHjo8/Pc+rMGbTkBLdmkqTTWYZGTuC30lyZSAAwOXab7qETnD17
      lmjQQ6lUJLm0QLFcJbG0QKmiIjtcBH1eLFNnbnaWYrmGbVsszsfJ5IvYokJkZQHnbGqZZCaP
      Tf1HzySXyeSKYNtk0wkWlpLcDfO7tLBAOlU/bxkqxUoNqMeUr2Ny/dpNbMukWCwyH49T0w3G
      v/6M97+8TDpbwDIN5laOG1qVqqqRTKUpl0rkc2kSqSwA5UKOmdk5DNNi6tpX/OGzSyQzeSKR
      CIIgYOoqs7NxNMPC1GsUSyVmZ+cwLbt+bmaGYrlev4WFxdVnPjYxy9mzZzl6uB/bMlmYm63f
      L3VBjcfjlEtFfv3rf2B6ZhbDtCnk0iwl0thAuVRCq1XIF8sU8xnm5pcO7Dpg27GzANgGmbJB
      LOTF4XSjZWfxtA6iSBLDx04yOzFGZ08vglbi/LVp+tpX1pa1TeZmZ5iamqKqGvzuN/+Eagm8
      9Q//Bd0S+PDDDzArab6+OcWXH7+PLjnI57PcuvA5iYpFKV8AweDChW+YvvU1Y/NZEpNXuTm5
      zO/f+UcKVYOPP/oQq5Lgw3M3sbUSNeNulWsUKzo3LnxCPF3gD3/4AMtU+eiTz9fdml7N8w9v
      vY0o23z04Rc4XS7cXi9Op8KnH30Aosj7731AavYG//5X/x+Xb0/x6bu/YzFT4ptzn1GoGmRz
      OZyyzQcff17P7/Hidjq4eukiumnx7h/+gOKQeP/9DygujvLWR5dQxCIffXaFfC6L0+3m/fff
      2/YnqBTz2JKTy19+SLqk8u577yMrMqWqhsvtwu/zkVuc4OL1KUrpWS5cvcMn773DP771FsnE
      Eu9/cg4JjVJt++/iQaSBL4CIwL03h+R0Y+sqUF+dXJAc5JZn+PXbH/LDn/+SqG8lbrsg4PMH
      CAQCSJKANxihu7ODcDRKV2cHsnivzMNDQ8SnJkhni3QfGiK7MMtiMrX6Rh+fXea548Mcf/4M
      M6OjePwR+nq7cDkUBHeYmNtmOr6AYdUlQJBd9PZ289zIAFOLZSJOg9s3rtA9fHrD3XV299HR
      0Y5taHi9XgLBMD6Pg9n4HMtLSzhkGcOG42e/xQ9efwHF6WVgsI+A342hV7l58zZzCwkymcy9
      /Kvr9FawhSAd7Z3IGJimTd/AITq6O9FKJaYn7zA9PctCIrWhXuV8ikuXLjE2GWd+ZorpmWmy
      mSSZbBrF10pHewdtrVF8Ph/RaIS5mSmOnDjF4aPHSc3NYAsSP/35X3J4sJ/OqI+p6Tia/mQI
      gGVoXL96mSvXbqCbNvn0MhfXqNS1cp4rl7/h6o1RrJVGsDA9zrnzF7l06RKZYnXTcmvFFFPx
      xNYXNivcHJ1ed2hnARBEhnpjnLt0hdu3b2F7OhAq89waHeOLP37Nc8+f5L33PuD0c6dJLc1T
      qtaFA9umWMiTz+dRd9CrddOmo72N+PQUFVWnvaOd5YU4hlm/+ZFD3Xx18TIXvjzP4ZPH1+XV
      KhWCrW24rBLxRF0flkSLyfEJvro6xenhLl791ov8/dtfcGqoY9t6eCOtJKfHSGfLdHe24fL6
      6eruRhLA5/NuSG8bKoWqgc/rAhu84VaSs2MkM/m7JaKIRUbHRrEkN7IkrMufSmUJh4MImyzR
      4A22cPbsWYYHe0im0wRDYSRBwOEOQTXD2NgYyWwBryIwNjFFz6Fhbnx9niuXLtE5cBjF4cbp
      kDB0DU8gRMAtMBlf3vb+HxWfffQBHf3DjAwfwtYrfPLVN5w58xy15XFG42ky2TxHj5/Eqy1z
      faa+4uX42CgDR09y9uxZIn43xWKBpYU5ipUqS/NxShUVxekh4PdgGRoz01OrKvXc7MyKSu2g
      NRIAIJ1YJJnJNbhAhm1TqZQxbQGf1wu2SaFQxOX14VRkKuXiaiP3+vw4FBldrVGq1CXV4/OD
      ZeJ0OlFVdfW/Q5HRTRtZhEKxhMfrQ5FFioUCisuD26mgqjpOp4NquYQlyHg8LjRVxeF01v87
      HFQrJUxbwu+rLz1q6BrlSgWX24vToaCWM3x6fpQffO/VuzeEquo4HDK6buJwyCvXUaiUSoiK
      E6ci1e/R40WRwLQlFFlEU1UUpxND05AUBa1awURClgScTieVcglBciCJoCgKtmVSKJbwB4II
      tolpCyiygKqayBIUy1XcLidOhwNVq98rsPqcgHoZhRIutwtZcSDYBoViBX/Aj2CbFEtV/IEA
      eq2CZoLP50FfqacA1KplVMMm4PMiCOuF8JFj6/zzb97jz3/2YwByc9e5vOziu2cPo5eSfHRx
      kj/97stUCmneevtd/uznvyTscfDpH/4Zd/swEZ+Dzp4+fvP3f8vrb/4ZH777e77/Zz/k4oWv
      +bNvjfDJaAVHaZrBky8i2hapyZsoXcP4ZYHu7gi//e0XHO0JkBXDuCrzDa4RJgh4vL41+xLB
      UGh11+P147nvBak4XYSdrjVH6pe6+6Pe/e9Y+QaF1pQXCN7bvtsg3Guuf38ZHu/6xdJkxUEw
      uLIKo20xG1/m299+ae0NrZbrWKnA3X2P715Za+/x7qfSsXJNxVFP77rvxtc9J0CQ5DX3Jq+W
      43TWt0LBe8uT3q3D2nsDEESJYCi4plSF0Oq+SHClDKfbw91cjjX5XW4va3+Jx4uIwD3rmOx0
      Y2n1F6Wu1RAVB+mFSf7w+RV+9otf4ru7gr0gEopEiPgcyJKILxSls72NSEsLHW1tSOK9MoeH
      hxgfv0Mg3MLAkSN8c3OCojdId1d95cw78SR/+qMXEOzYARgHEESGjo7gkqXHXZMmAILE4Z4W
      zl26ws2bN5GCvVj5GW7eGuWL89d5/swx3n//I06dOs5ifIZSVavnsy0y6TSpVIqaun1fRjNs
      YrEW4jPTVFSNWCzG4vwsd41gJw538/n5bzj32bnmGmFNHgO2TbVawULE43aDbVIqlXF6vDhk
      iWqljKbXVeq6WiyhayqVat1c7Pb6wDJxOBxomrb6X5ElDNNGEgVK5TJujxdZEigVSzhcbpwO
      GU0zcDgUqpUyiPLTLQDVahW3271zwib7xrP2zJ9qFcgw9j5q22RvPGvP/KkWgCZNHpSmADQ5
      0DQFoMmBZsdxAMMwqFY3H3p+3FQqm3uZNoJlWYjig8v/s1yOIAgbBs6etT7AjgIgyzJ+v3+n
      ZI+NvdbNMAxkubFxwGe6HNuGSgqyk1BaBtkBsROYvg5EUdwgAPc8ap8NHvyJPwC2ZXL7xhWW
      0kWOHj9FR2v4cVbn4FDL1Rt7NQOZcZBdEB2GnlfAUGHiPTj5VxwEDfmxCsD0xCi+1l5eHfJy
      59Z1PN4zBD3KzhmbbE81C9U0iHL9Ty1ALQ9aCUpL9Qbv7wBXCEZ+AYoH1r7pQ32QHoPYscd3
      D/vMVqphwwJQzGRwRSIogG1ZqLqOa42/yWZotSqy0021Usbr3ehNqQgGn3/8AS98+0+wJWnL
      xm/qNS5fv81zZ86QSi5Trdbo7e1ttOrPJpU0JK6Dmq834NZjUEkjLVwAZwC8MbAMMDVwBuuN
      PdANva/XBWA7p7jOl+Dm30PryPbpniK2Gu9tWADyyTQVs0oiWcDnUpheSHLscD+ZTBa/x0cZ
      EKp5dNFFR8TPYjKPUU7j7TiESzBILMSpWTJHhg8jrjxTl9vPGz/4EeNff4YU7t7y2qLsJOR3
      Y9swdu0CA6e/i23bWJa1507Zg+R9nOUIxTnEhQvYloXVdgqiR6GWR4z/Edvhwxz+BaLTt30h
      prn9ecmF6O/EKiew3S3rTj2tjgPlYpHxW9c3HN+VCmRqOj39/eSTy3R1drI8P4vg9KFWVXqP
      HiYxa+FAIJlMklxYpqu3h/a2Vuanx8EUcIoGhg2OFQFo6RpgcvQqZUNgpHNrATDUCgsLi3iD
      MboPHSW7HKczehRRFPfccXyqOq+1PCxfhcwdcEeh/zsInlbEu29nfxu0DgNg71N9zIE3EUVp
      Qyd4P9ypTb1GWYOAt+6jWq1UcHo8qz0O29TJFauEQ4ENeQ1NxRZllBXnxnRiEcXtx+l04XTI
      VCoVPB7Phny6rpFObJwP0fCTaunuBElEUhy42jrIphN0j5xkaTlJR1sMhyAQi7UBoFU9+EKt
      tESDpNMpuju7MNUKVUtBuU8Ny6QzBIN+0ukU/Z3RTa8tO928+q3XEQQRsSX01L6Fdo2hwtxX
      kJuGzhfh5L8GyfmI1JKHd43FuTgFXaInFmQpXSQS8mNZOnPzy/QfOkxmPo63tZPJiTECoRbE
      FXNsOrmM2+FACbcRC3rIpxYoGgrtQo1vLo/T29eDU4ZscpmKKRILeVjKFBk6NLBlXRoWANca
      HV6RJDq6egAYHOhbPX7XScrtdnPXW72zfcVxyuvlfnnOpROMnH0NtDL58taff0EQkWVxzf6z
      oZdialBcBDWPqFVAUuqNu5KCcqKuw7edhtP/DQjPikXGZimRoqbbtIa9WKZGKpkhGPJQK+VI
      ZUuUVRNfNUMqW0F0qiRnx+ns7ScQ68ZRy7LiIE2tphIIRXE5Vdo6e9GrRUqahlNRcMs2+VKJ
      1OIiPX19W9Zmz99Ky9TRDQGnc++f22JmkaX5HFGnSlZz0tnesnOmpx29WrewLF2uN2pfGzhD
      2LK7bnW0bWg5Cn1vPMK3/aPDNg0GhkfwOYSVcDkikWgYSTBwevx43Q7chpOa5Cfoy+N2SBwa
      OYFpGOQSc4TDUdySTbmqEuvsYfzOOEYkQijgRzBFDNNEliREwaZSKREMh5HFrZ9hw+7QqeUF
      0tkCXd1dzM0vEGsJUq45UfQlZnIigx1+DBSqxQyBaBu5xDIOXxDRKCN7ItSKSWzZy0Bv12qZ
      2WyGQiZJ2VQ41N2CIXrwuhoXqGKx+HQMhFkGpEbrjd62IDwA7WdA8a428CetT2Ka5pYDYQ97
      YNS2barVGh7P/rldp5MJvv7ysw3HG35S5ZpGb5ufmUQeQ62wnLTw+dvxBUJ0e/1k0vMMDnRz
      J5WkMD9NyBfD1lUs20bT6tEjLK2GCazOzdIqjE1Mo+kmqWQL33rlxf2520eBUau/rYX7HqFl
      gGXWzZP5WcjN1AecWo7AkZ+Bw/fMvdX3G0EQ9qnx1wVpu/kLDQtAMBhCcYqEvDVymptwJILL
      5cLtdrE4s0SsvQ1RlJAkiai/Fb/XD5iU8hkQJVKpZcJtvevGFsNt3fzgT+vWn/pAxb2GMTV+
      m1y+wvDJ0zhrSS7cSTF8uJ9SLkG5rDEycmTXj+OBqGYh/mV9gMkyVtQTEUmvrvQXBcCuDzwJ
      ErgC4OuAge+BK9xs9PuCzdcXzqF4I5w8NszYnTv0dnWSTGfp6upgbvYOuu0n6PNiaAU8oRiJ
      hTkGDx/essSGBeDuxO52d4D2tti6c0OH7/Wyjxw9smm+lrAfl2v91Oz42BW++Po2z7/2JpX0
      LGfOnL13q6LC0f5WslWTmCtA1JsjlUqTnLrBwHNvbj8OkJte2RDqb2q9XO9wrsQNQnFjO4IY
      oV6QHBvz349WQrr9a6y+N7H9nfVGvkJDzmc72d15MsclNtOOH6sFzjIwdA0ZEcOysYGFuXk8
      bje3x8fo7u4kk8iRzRQw9BzxpSztYR81Y+sQlY/MFeL+xg/g8YV44wc/ZvLy54ihrvXnnDJ3
      5gscOhSiXDOxsPG4PQydfJFKfhkhMrD5OIBtg1aAWgYQQHHXR0pdPhBXRpr1ClZ5EXHhq7rl
      peUoBPvAFVxJY9cFRitCcQnmz8PhHyIFNo5VPGm6+8PuAzxOC5xtmbj9EWrVIgLgcbtxygoe
      p4Ipw3x8Hr8/jCyYZFURr9eJZlk4JZGt/Jkb7gTraoXFZJ72aJh8ucj0xDiHjp4kEtxh1HEH
      rlz4nIVUga6BEU4d3dpeuxn70gk2apC6XdfXa7m6/g4gO+uC4+uA6BC4I9uX84A8aeU8zk7w
      /mGTTmeJRiMP3gmemo7TGnJz88YYsUP9BMMtD9z4AVwuN4pS2fQL8UiQXXWLTPuZx3P9Jg8R
      gWi0/uJyuT0cOrrRua9hAQh4XSwkC7S2tRINB1DTi2TyZSLBjU5ujbIwc4fOoTMMHzMYm5zf
      JqWNZdnPzgBYk0eOy+1m8MjIhuMNC0B7dx/ta1TggcMPboVxOWQ++MNvUUSLoZMvb5munEkw
      Pp/EF4wgW1XKFYORkeEHvn6TJo91PkCkY4Cf//nOen+uWOXIyAjzMzPEp28xcPq7za9Bk33h
      qQiMZVQL3BqfpaW9G9FWqZYr9Pb1USwWURQFSZIwV0yNW22Lorhunquu68iyjCAI647f3Ya6
      yW/ttiiK2La9btswjHoQ3DXHLctad82t6rX22Fq2q/dO2/d3Xreq907bhmEgCAKyLK+rd6VS
      IRx++mbuTacn+Q/n/88Nxx/rF6BRZHeAkydPbDguiuKmrq8NlSnLT5TV5UkrZysrkKZpW+R4
      sqnpVcaStzccf1ZcDJs02ROPXQDslZHLp0ATa/IM8lhVoNnxm4xNL9R9ygSRl19/A/8uvEGb
      HGyMWonb4zPEYhF0y0V7LEilXMbr8WDZNqIoYFo2srR1m3qsrS0YDFLT5vn+D94kvTyHx7F5
      DH/btslms4TDEWq1CoZh4vM9+CBck6ebRCJB76FhAnKV81emKeQzSIKFXi2h2xJtUR9//GaU
      n/zkz7Ys47EKQDqV4PnnT/KH3/2e1rZWurs3n7lj6SrjkxOcfT5CfGoMXFGGfL5Vq8Ve2S+1
      61ksZ6tn+ySpqpFwiNt3RulsC9He2QNGCU3TCISjSAJkCzk6omGMbZaHfawC0D90nGwuRyzs
      p3dgaMt0ksNFdGWCdD6fo8XfsfoD3TUz7pa15s4H4Vkt5+6zfZLHW1z+CGdOrfXRWm+e7WTn
      0DkNC0ClUsHlkKlqFl7P1n475XIZt9uNiE25pm+bVpQdjN2+Sf9AH7Ozc3THNrcva9USlYpK
      IpXmyPHn0DQdQRAQRRFJ2tvSR7Zt7znvQSgHeOK8QR8GDQvAcmIZo1Yj2hIBUaSQTeBw+iiW
      Svi9LsqFPKIrgEOy+PrieUaOn8QSHdsKgGWaDPT1cnNsimNnXtoyncPt4+SpU7u7syZNGqBh
      M6hlaFRUHa2co1zTKFZUZsZvUygVKRZLFMsV5ubnyeYLtHd0EQ24yBbL25Y5OXoFR6SH773x
      CnPTUw98M02a7JaGXSEKhQJet4N0Nkc2mycS60CtFPC7nEhuP4nFOLLLj9/jxNKr9ehiipNw
      YGtv0Vopw0effIUFvPjad2kNenb1iX1qJsU/heU8G/MB7lFRyyTKGwNjPVZfoKnRayxkqwS9
      LlKpFM+9/O1dBcdtCsDDK+dZE4C7vlf30/CTsm2bWrWK0+2uWweoO0eptSoWIg5ZRtrlWrwD
      R07SWsiSypU4euwEsnRPI8sml1hMF+uxRI0yV0dn6e7tRTA1NFWlrb19V9dq0mQzGhaA+NQ4
      piivRPQKkMlkGR4e4tbN63T0DCIJNi6HQs2wUEt5gi3tZJYXiHZ043VtPvG8mFrgo3PX+P6f
      fJ/FhTg9PffGATKFMn0RJ8mSTsiuYNk2hmEyef0i3UdffOKC4xoVDdnTwAT7R1Sf/SjnSR8H
      2BWmibnJikINC0BNtxga7mds7A6Z7MqEc8DQNVRNp1YuYmgqnR1R7iymCFdqGIaOp6ZuKQCp
      ZIKzZ0/z/u9/R7Qttk4AbFMnmdcIem0s201fTwdLy0naurop5jIIsdATFRw3fmGMvu8cQdzj
      ivRPiwr0tJpB1YlJUv/2bzYcb3xGWGuYW7duEYq2gaWCXX8Qnb0DdHa0s7Bgo8gh/H4fAW+a
      cLSFYjaFoW8dEqRv6BhTE3ewjRqRtvWDFgMDA+RKNfyKjSV60EtJhoYGsU1jz4NfDxNnwI2a
      r+KONl00niYanxMciXEsEttwvLOjs/6/s2P12PETdd/9ttbtY32KsoNkKsXZF59nIZmGgXtl
      SIqTaPjeAhyrOn8jcXweA772IKXlQlMAnjIeqzt0uZDj+KnnKJdr9Pf3PM6qPDDuqI9qqvT0
      6sgHlMfqC5RYmMT299ERizA2O0dbNLhpOkuvcntsglj3AIJZQ6uptHd0bJr2caF4HFi6gW1a
      CHvsBzTZHVe+Pk+wtRvB1OhrDzGdg/72ENMTYxRqFtGAi5nZRc6+snXAhcf6BegfOkl2bpSr
      o7OcOrkxZMVdlheX6R8eIZ9aZvTaRQzJ/UR2xpxhL7Xck7mm8rOIoeuIolifpmmblIp55hcT
      hENBPF4vnd29tMZacUhbN/PH+gUQJIWzL39rx3Qel8Ly0hKWINHe1Usxm8aOhR5BDXeHry1A
      IZ5GkHYvnJZpou+DE9t+lWNbFq6w94l80dxFlCQsy0IRLa7fidM+cJQWv8KXn35BR98hcslF
      Iu09265181RMvwrGOrEyGQKhCNaKFejuOEClUnliokKIAQUhJZCfSu36Hi3LXhcde6/sVzm2
      bWMrArJTWfc8n6SV4p974ZWVrc51x7/1xhsNl7GjABiGQbX6+D/rsuKgUi6t7muaRq1WQxTF
      daFFGtnebL8RNivv/nI8g3sLGbLVUP3jKseyLEwsrDVRIPbyzJ4UBFlCDG3UGp6KuEBb8SB+
      KU9ag3vSyln7VVzL0+wLtJk691SoQA+D/Zo08qyWs+OaB08Zm41qwxMQFuVRUSsXyOSKVIo5
      Jqdn0bUa43fuUK5pzMenyRU3+olshq5WSaQyaLUy4xOTaLrO9OQ4xYpKcmmeRDrXUDn5TJKJ
      6Th6rcz4xDSmZTI1MU5F1VmanyWdK+1cCFAp5hifmELTVCYnJlB1k9TyIqphkUksspjMNHZf
      tQrjd8apqjqzUxOUqhrLC3Hml5KUcmlm55d4enWFrV04DowAVCsVUtkM8fllQi6LWzfvgKIw
      PTmOgZvk4v/f3r39pA3GYRz/FlARRUrVghLdpombZpkzmUu82j+/OzPnnPNAmCItlEM5V6nF
      ll1ost0sKTNTse/nnvLLS568R/qWfD3HvnYwzSq6VmRhPs6X3X1iyRSF8yytjkOnXsPPQY2x
      6BSu1eGnViKjxjjYPSCeyqDls1i2RL1q+KpHikwwPe6RPc6hpObRCkWa9QpXTp96q0evWcfP
      tNVDQp2NkTs6YUxWMXSNeCJJu2FSqtaRbIveEzyCMozz3Alfvx2iFYu0TYNKoxucACRkmRC3
      Z5oKehl3AJFI+PbaJEnyfS90fCZBJBwinVa5KGgk1RTtahHH9RjmculGrUwys8QYgCQx4PfH
      JSTfT7JaddyxBLOJ270RKRRGTgw/Rnd6FmZ3wHJGufvuASVdY/nVyl09T3c51K+BNE5mZorW
      VZfjfBk1OR2UAAwoGwaO3cMlREJd4u3GKjc9m+WVNSLeJXMpfzvLZrlI3+lj3wwYjymsvkgT
      Ckd4vbaBHI8QV+Z9NarnSTSqNTJLi+gVi83td3QNnaUXa8QmXBTV3/8dXM/DajeZUdOYRpWF
      tEKzY9OqN1DkSSZlxddE7+bGpW9bMClz3ayQzizieVCrmaRVBXcixuSIzwskz6HYuUSOxVl/
      uYBhtoO7CiT8m+fW5qMdaUG4JxEAIdBEAB5IPp/nqlXF7NiPXYrwh8BuhD20hn7G3qHDzvs3
      fN6/QFEXMXQdVUnScPt82t5+7BIDSfQAD2RrZ4uQG+X0YA9HCpE7/EHl7JTsuc765tZjlxdY
      ogd4IFJ4mo8fNphTonw/yrGytUDXWkVWZpHHxc/wWMQyqDCU59bmYggkBNpIByAa/fubp4X/
      47m1+UgPgQThvka6BxCE+xIBEAJNBEAINBEAIdB+Ad83L/sQb4SCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Cement CO2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Coal CO2' width='192'>
      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
      /T+6c9GzPjP3CwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Flaring CO2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Gas CO2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Donut Chart for Oil CO2' width='192'>
      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
      j8cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Emission Rate by Internal Factors' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Contribution by China in CO2 Emission' width='192'>
      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
      QlCFwmoyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Contribution to India in CO2 Emission' width='192'>
      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
      Mdr/AdMXV7gBhGCUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Countries Emission' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Emission by Continents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total World Emission' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOS993NcWZbn93k+vUcmLEEABEiAZNEUWd6wmmXbTXfPbHfPzuy0ZiSFdmMi
      9IsiFKGIiZBC+hdW2ojRaqSdnZ2e6dmqnnbV3dXluiy9B0l4n0B6ny/NM/ohCZAgARIkUaza
      2G8EgszM994177h7zrnnCqVSyVYUhUeBYiHP9JXztHmdFKs15FAn/QMDAEiStOE9pmlSr9cp
      l8vMXr+CS7LpGjnM6NmTeBSRQkUn6HMT9nmoNwwUWWJmOcVAV5RcsYq7cyd9/f0P3fdarcZv
      L5xF8Xof+ln3g2a1ilKq8LVnnsXhcDzStr9sZDNpFs69w75uF5lyk5TYwcjhZxEE4YGeZ9v2
      unsty0JWFAVN07alwyvLyyTii+j5DNGenezcNQSAIAgIgoCmOTDqNZZrOl1D++gd2HXPwTQa
      DZaWlujp6aFU2oHX4yEajSI/+SzpxDI+G+KzU+QqaeomBL1u2rp7SZUKeNo62DU4iCzLDz02
      VVWRLJt0rfrQz7ofWLZJtVzk9LlzvPzSS4+07VXcTjiPqs2JqxfZ78lTzuS4lg/z9CtHH1gI
      GIZBIrFCV1f32vOvXLmCUKvV7O1gANu2+eSdX9KutQhebzRZKjVxKhKR7h2MHDyCIAhYlrXG
      EFt55nI8jmEY9OzYQSGfZ2b8Gk63l+6dfQC43e5H8nIqlQp//7N/xu7temTE0CwUoVKlxx/k
      paefwePxPJJ2vwqolEt88Ob/zSuDMqdmygwd/3Ni7R3b8uxcLku5VKK9o5OHF423QPUEMGpZ
      FFnCqSrsDIhIokgjs8T4VY3dex9DFMV199i2DcDc7AxOp3NtkJl0ihO/f5+lpSXaQgFC3/k+
      pz/5kJ1emWY5yaWpy+iqj6+9/g2KxSJTVy9jWRb7Hn8CXdfJ53PIkozX50OWZdxu90ONzeVy
      MdDZxYRpImyDRrkbrGYTq2kgaCqYFrv7+/+rIn7bthk7/ykv7BQxTBshvHvbiB/A6/UhihIX
      z5/dXgZo1mvI0k0Cl2/Y9ZoiszB2hXCsg3A4sk6C6rrO6JXL1OPTiLKM/+Vv4XA4uHD6JG67
      zov7dzGbyNJsNhGaNSzbjSrLuBwaPcP7qZTLXPv0PYJOmawhc+bkCYz0Eh6HwkK2SGfQh2lZ
      +HcMMvzYoQeW3oIg8MTRo8x//jHNL5ABzGaT4uQMHbEYFbcTGVAV9Qtr76sKr9eDUBRYLprs
      PvLMlu5ZXpjFbNbo7t8DQLlc5trVUY4cfWLN+jj967/Db2dQJBhyCYj3eOaWYVkWYq10B4FZ
      ts10IoduCYx9+i6LC/M0m00ajQa1Wo1UIkF66iqJfAlTlFFVlZWVZfYfPspitkSjaWC5A8xM
      TSLaFtINDVI2Jbq6e7h+8Swhp0yxopOrW0xcPEPY68TrclCpNXDIEhGvi/LCJLls9qHG6Ha5
      UJvmmtb6IlCYmQNFZike5zG3jx+99nV27tjxhbX3VUQ2k8ZePk/DtFh27CESbb/nPbZtM3Pl
      c5anLmPbNtVqhVKxSOcNm7/RqFMoFHAZGQbCEjsCEk5V3D4GyGYyCEZj3XdNw2Q2p+NSZYba
      vCiSyIkP3uXUb/+ZybHr/OIf/45ypUybz81AewhPbAeCIDB75TzXL5yhzefGME0UvcD8wgIe
      l5PJeIqkbtG5axhRFClnkgiCQF3U8MiwIxZGkSVEQaArEqQkaizqApPLKcrl0kON0bIs1FoD
      q9l8qOdsBtuysG2bNtWBramcvTqKZVlfSFtfZSxc/j07/DZz6TojB45uSWvPjl9GqCRxU2b8
      4ucICFw6d4pYLIZt2yxMjZFcmkFyh9bdt30MkEoQ8DjXPhumRaraxOP1Egu07FdNkdnfHSHi
      1rh+/hT9bX6WZ6do2gJuh4YktkyN3uEDCNU8/e1hvC4n3ZEAQaeC6AngdmgcPvYqfYNDLC4u
      EHS0zCyjVqGJgN/jRhJFTNNiZiVNttokubLMwb4uxk5+THxp8YHHKIoiCyvLCJu4bB8WgigS
      GtpFGYvutjZkRXnk3pevAkRJRRYFnO17CIUjW7pHT0xytFtkyFuG5BVUTSPk1UiuLPP7X/6Y
      pdlxItFObE8nef2mUNk2BlicnV73OVfR6d1/BGrltZfodmjIsoQkiuzfEcPvdiI0azSsFuHX
      izkA2js7GXrmOLl6SyKKggiiTL6s03T60TQNQRAwms21Z9uWSSGTJpkrtEwUAQTTQE8uks2m
      KVZ0eiI+Lpz4FNM0H2iMtm3jjrYhiOK2m0G1QhGz0Wi5i3u6aMoyBwYGUdX/uuz/yStn8Oqz
      AEiyvGUBYOm5tf+bgkKtpmNX06STcQxBY0BepHH5n/CE20l6D9I0W0ywbQxw7PVv0vBGMW4Q
      V9MGRVGo1Bo0DINsqbLu+tWBBRwK9o17rHKOYrGIIAjEYu10Dh8knskzkcwT6ehCblSoFgtr
      BCyIItKN58SCPkRJJhzwIwgCkijy5J4+Duzawe6eDgJeF6ZpMTs3xy9+/jMuXbxw3+aFIAig
      qdSSabJXrlEvPpxJdStUl4vCzDzVdAYA0+MiUyx8oeuNryJq+QROsYlhWjTLmS2Nv1AoEBBK
      2LaNZduIoX6mP/spbUKWei7OAfcSfodAxGUjz3+IWUrwwUQN2EYGkCSJvYeOslzQKSk+Bo88
      R0dnJ52793N6Mk4yV9zwPp9TpSvYclFKAhi32NcdXd0okW6Of/uPaNR0ZNtgd9TL1fNnAQgG
      g+RNiUSxiiyK9AUdKLd4oZQb2mZHLIIsSciShCYJnPz8MxqL41w6f+6+xigIAs8ODTMSasMn
      K4hbMIUyCzNMXr3O+OlzVPTGptcJsoSnuxOzqiNn8tiWxbWVOMuJlfvq46OAbds0m01KpRLN
      ZhPDMLbt2X0HX+TNKwZTyRoBK00+d3fHRblUJHX6J0Q9LUHYMGxsScNDGVW00AIdXM4618ye
      qMvGY6QJ+FpmufRXf/VX/9t2REqhZSMH2rvo3TWEz9eSxPHZKfq8Mm0BL6ZlYVr2micHWBcU
      s4Gm4iIYai1ULMuit38AWVFYmLhO2CEiCgLFhklXbz8Oh4NrV69iGAaCZeJ1OdCUzcciCK1F
      cn9nlLNjM8TjS2guN4FgcNNUjNsRCQZJZ7M8NjzCtXPnUSKhu6rpci6LLMP8+CzuSDter3PD
      6xqlEuXpWURF5o0jT3JtcR7Z7aLb4ycSDm+pb190xNa2bSqVCufOn+Onv36Tq9euMjZznYnZ
      cSKhNtyuhw9KqqpKJBpjaXaS/rDEzPwSgc4h5E3SdS6cO0PMmMGptmhKFgVyuRxGZC+dwgr+
      +iIuoUaxZhF2t95xoS6SLtboDUrbywC2beN0OtdNQrAtypWpOYqmiByIoQTaWIzH8agyorh+
      shRJIrEwx0q2QDAc4eroKB2dnQAsLCwgNSrIkkS9Ukb0BPF6vUiSTC0VR6838LkcCIKAaVoI
      Qou5FlI5JFFEkaU1ZnOoCk3TpFSu4GhWmJtfoG9w95ZeXrPZ5HdnTzGez9EfjZHIZFA9mwfZ
      zGYTQfXS2dNOIBJCEu9sw2w0yU9M06jX6YrG2NHegWTZlFYS9HV1EQltjQG+KOK3bXuN+P/j
      j/+WS+Pnce5Q0M0qlrdBsrTCROEasq7SGet66PaCoTDuWD9TeZVEyaS9o5NsOo3P77/j2kg0
      xvLUZUKOm+Zsvga+vicwElfwOCS8DmmN+AGCTgGHZOHWxO0JhNm2TSadZnx8jGeefW7db5qm
      EYmEKS7PU1nMkTdNsAUs28FGMrc96EWvpHjvF2/x6nf+xQ2fbhVVEtaku2EaTIyPEwyF6Ns1
      iCDJfPrxR9SSBTyaTLWqky9XCAWDaKLARL7O7iC4HK2UD0EQ6GkL4XE6WM4UKNUzdFw6z8iB
      w/cc68z8PBXbJqDXmNZ1JPXuiYS+ttg9nympCuG9e8heH6cowq+uXqLb7eXxPSPs3jV4z/u/
      aPz6nbeZnJik2WySbaQID/mxFYvAiBMjbaO5FGRdJegPUa1WcblcD91mNBojGm3NXblcZuF3
      /w/W4Tfo3rVvHaM3Gw0w69xqzRtaiGJ8jH7nxlrdtm1iPgXbtrdHAywtzDM5NUk2EaeYzTB9
      8QymIBIIhW+YQdMEJQOfy4nf3fq71QyybRvTshFFgUS2wOhSGtnpZs/IXoqFAr9+6ydo/jBz
      8/MokohpQbKsE4m04fF4CAQC7N2/n3QuTyWfIZ6v0N43hG5CQ9Tw+QMspXNE3OpaKoaqyLgc
      KlNLCbxOlVLdYPfwyD3Hms5mmS/maDo0QtU6uUoFRzDwUPMHgCDgaosgu91IDg27WuXFI0d5
      VJm6G8G2ba5dv8bb7/2KfCWPd69KeNiPp8OJI6QgX3VxxHocpaIxtjRBOR7n0onfE4h0EggG
      70sjVSrlTT1eiqJgezq5+Mnb1BfPk04s0UTD6w8QX5ynvHCFNu9Nj1G2JmEDYWlzJ8XqtdvC
      AI1ckoWxy3hVGc3UiXgcVLNJpqamEFUHOwYGmV9OUrMFKpUyrlukpm3bJAtlsk0BVbAQBYFk
      Ns/Q/oPIssL46GV6PRKTk5Pse+oFVpJJuv0uTL3EJ2cu4HY6CIUjyLJMOrFMWDZoD3i4OjHF
      G9/+Dh1dnWQyGSzTwpZV3KK1NnhRFAl63ZyfmMPjUOkdGLpnZmw4GKSRzdPp8zMyOMRYYhnN
      9/Ap0qvmmW1ZOEoVvv30c3gfcer1rahUKoxNjPGTt3+MGpbwdjtRdQ21XUJURCzTIrAQpsPb
      TrPeJCDH+cagRl9I5uTF61RyK+i1GoFw7J6MkFyJkz31n8g3VIJtrZyf1aRJaNFIfHmZgNfF
      oJagTSpipq5zZS5H+44BcnYAb20eVW4Jt4zpxXK3U8kuk2q48Ur1DU1PYHtMIFEQ2BltLVxX
      O+1UZZxA+upp5lHI5ov0Dg2TrbTcoY2mQaGqY7mCNNxhnFaTguLAoZiE220CgSBXLl9Cw6TS
      aDLUHSWdSpHM5OgLOOiKBFkuN0lPXMas19h/5ElMRPJlnbaAl/5YCGybfDbLnj3D6LrO2ROf
      kjPr7Om5aZZoqoJlWQwfemJLCWeCIPDck09imiaz8/M4I6F73rNVWE0DZ0Xnu8+/+KUSf7lc
      5v/8d/8WWwDZIdL9TBu562U6Ch2kRlPUA3Vs22a3oxWkKlRWeHk4gKaIqLLAsT4Tn3ORZnaB
      sU+m6Hvim+vSmCuVCg6HY83xUNOrVG0nbcEoAHOT11hamOfxZ47RbDaZuvgJgp5FDO9CL9h4
      NAGfQ2S/OcHVTyZpP/xtpse72KcuIwgCTqtMZOgAs40q1ZUJLgk9HHIvbsgE26IBasUc1Vx6
      3XerjKDKMm5ZIOTWmJ2ZxtfVhy46SNVtdh96kkRihVJiCZ9sMzo9z/Fv/AG79ozg8Xrp6urC
      FCWujF6lIqi8+LWXoaHjtFsBsHxFZ0ckwEIqgzsQIjl1jajXQa3RZKlqc+Dw4zSaDcrlCrFo
      lGajwXQ8gWCZ+F3aWrzA73Hx0ckzdO/oxefz3VNiWZbFP/z0Lc5MTeC4hxdoM9i2TW5yBkco
      QDOdoV118ER3Ly8eefCc9+2AZVmcPnua2aUZyrUSkldAW3TiMh10t7dDXmS/vJ9uo5ugq2X6
      1Rpx+iKNm/s+lJYklkSBoFhianoWR6QXVW3NeaPR4JNf/C2V+FVcbTtpi3XQNnCIciHDzGdv
      kpg6T6khYiyeojZ7gh4lS4ezRqCxgEO5aTqLokDUbZNensdu6rQ5W/Eht9RkLG0SLI0yFIGp
      rI1f0tc8RbdiexigkL2DAW5HRa+ju8N0dffQ0dWNZRhcOHsGvWFSK+XpigSI+V2MX7+G6vYg
      yzKJ5TgzMzPsjrhJZbIsL8wRUcy1jNOwp+Vxcnfs5MLZ0wRVcGkqsiTiDLbRuaMXp9NJIBBg
      9PRnOKoZVvIlTNmJX7vpGfK6HIS9Lt56+x2SySTDwyN3pG3fikKxyIfnztCo1ZA0FcW5sWvz
      rrBtOmSV4XCU5x87yKE9w0RCobu2+ygwNj6G3+8nl82Rq6XZ4etkuHsXbb4IkiTh9jlZSaTo
      Cnau3SNLfpayK3QG73yeIEBIrrIydYmC6SIQjqJpGnpqii4pwWymQaRzJ9fPf4Z35WN6PE06
      /TJtaoWYyybklpClGybrBoJGEAT8SpOA2lyT8LmqQWD4OIX0EmG1zth8iqGYY0MN8IUmtguC
      sBbJ8zg1pHqVxJVTJAUBn9vB7pCD9y5OMBAL4tRUnIDPBaXJS2QME49DI0odTXGiqSoSNqp8
      c2W/upCuJuOEgiHCDnOtXTO3QrFYwO8PYNs29ZqOUW/w8hvfJNLWxpn33sal3exnNOjj9SMj
      JHIFfvP227z6+uubLkBn5+dRIiFky8IRuNM1txW49Abfe/W1bdmttp3Ys3sPhWKBpcw8sUiE
      4e7BddFYURSp35b06NJcpAtuoLzhMwVBoMdnMzX5AfXeQRwOB81yhqXY4wwfeIprp96nszaK
      74bXRhIF/M6tz4sgCCjSzfVCVowSFcAntBbBg+0uZtJ1drffKai+sNlfW9TdMnkuh4rLsX6l
      v6crwtjCMsO9NyWKU1Nx3iBOn7vV6Z1tfiq1+oZt+SQDUa+Aw02t3kBVZKqGjUNzrPVl35PP
      Y5omwWCQYrGILNh39C/s96LXm5y+eJbxiXH+7Ef/DeENglBNy8Tl8SA4H8xUMZtN9nZ2feWI
      H8C0TH72zlu4dsk4q9qGqQiKQ1oXdNPrOt2hDKAxnqijqQq9wTs1WcRpUshlUWPtKN42pPwE
      K/Eu5OIMPv/DJRjmKk1sG6pNcO1+guTURXY5TUCgL6wAGwuzbdG3t06SIAhIkrS2wFkX6b0R
      ULkVO9sjDHRE79mGU1OJ+DdeGCqyTN20WSrWGJ2LM5erMPL0i2i32NJ+v59QKIRpmkxePEPY
      1XKJSpJEvdHk7RMXSeWLhP0ejh/eS9QpceXSxQ3b62nvwKjXt7y1E1qpzpZpYpkmHr3BvqHd
      d72+0Whw9dr1tflanbtT5y6RTqe/sByhTz75hJQSJ7sYp5YUSS/P8/Gpi6zEp7l+9Spv//Zd
      ktX1GkBVVIp6i8D621RmK06umQMsFiz0Rksrm5ZNWtkBtsX89DiC5qXPXcY/93P6fbWH7ndB
      t/jJ+RIz9g4qmThdjetbejfbKoJuJXRBENbs2bvlisiSxFDPvTc8bIRcqYIsS3gcGposUXVH
      yM6vsLOrn2hs42cuLcyj1goImrqWDJevVGlr76Qoe5mYmOTAwA6SxSrfPnJ0w2fUGw2E+9xH
      XY6vIIgC/W0xjj//4l39+7Zt8/Y7H/DJmcv84Td09GqZ6zPLKIrKeKKBm7P8L3/5J2ja9maK
      mqbJ+ctnMWMm2dEyfQcclMpFEskEbrVO3dQwSnkM08SyrDUhJ4kSuWoUSCOLAo9HqqzIEpFn
      /1syK4vUEmPgDKG4/NSv/ZKwUsMoWYghGZe6PanlOyMaP3pSJl+dw1VexLVJEOx2bCsDrEol
      SZLWJNZWJNWDLvxkSWSxZODX60ieIMtT1+jZ0XtH7oxt20xNThCOtNFoNMiUa3Rr6lrfnKqK
      Zdd56rkX+NnSAldmlxg5cGhTt2h3ZyeRa6Pkt5B7YxkGrnyJrnAbe4d209vTc89x5fN5xq5f
      JxSJ8cFHn7Fcc1PVdUTNQ62qE4i08eNffMCffe+VbV00p1IprLYG7piD1198A5/LgSV10jc4
      DEBVr5Hq7uToE0+Sj2dxF4S1dZgg3Ewx9zgkqplF3G433sFhGBwmubyAffVNQi4REOkNbf9i
      36lKOO+Toba9F6t7L1f/bjePtjNfxety0h/UsEwTW3XRE/YTpopezK3L+V+cmyUzdp7Jz94l
      N3GRrlDLlFolHp/bSdQhMj01xdPHXkb0BDn+8iub9lWSJI4dOkwtk6OcSG3aP9uyEFJZvvXC
      Mb5+/OUtET9AIBDgjdeOowkG8yWRdKGJabcqJTQqORq2wnw8va27xSrVCifOfI7gtrCK4PV4
      kBQN5RbPSVnX+cEP/5jBwUFShTRN85adcfb6cjFOTeHSxYuc+eDnLM1Pozk9lOtfvdTu7WGA
      WwjFtu07CP/W37bTdrVtG1WW0Zxu/MEgYZ+bNp8bMbvExROfrLWVz6ZxKDLJQpmTY3NcnFpY
      u38VvbEQS1fOMDc3yw//5E/vuUB1u9zkpqbRk5szgGWaWFUd/wZJXPdCtK2NPYN9NOs6xVyS
      QjqObTUoV3QUq8a3jh3YcgbrVpBOp7iWuEygz4NSVtalqqzC5XIjSRKFfAF/zYUq3zTjLDuy
      tskEQKpnCYUCOIQ60x//AwunfgbW9qVNbxe2xQT6Mjbt2bbNSrYArgA79x4mk0oimhaWbTOV
      KWPXkzQsePK5F+jpH2Re1nj+6V7e8Hj59JOPWUjO0x1pBXIM00KRJXZ1t/PepcscOfoEgcDd
      83tcLhdDA7sohXyb99G0iLa13ffYBEGgvT1G8/QZAsEI7tgNk85q8vhemR++cpiuzo5t0aar
      yYbvXv01ri6V6kwdrXmnu7DRaBLr7CKfy3Pp9+eIudZHwDtCncymphhsbzke+kMSC9d+jtT5
      LNFGjn5vEdieAmzbia+eH+4GbndR3o7JpQSOSCfHXn0Dy7LI5XIkdBPN5eb4t15lZmIM4YbG
      mZ4Yp1AqsXfvXkRR5Kmnn+EXP0/jKJSJ+D1cnFuh2ahzeFcPzZrO/Pz8PRlAEAT2DAxwIhlH
      3mRBXM1k6ezf9cBz8PXXXuHllxq8/eEpltIVnj84xGMju7Z1m+SFixf453feQnRCcI+bzlIn
      bbH1a6hiuUww1oHD5eKXP/kpe8IjNK0qiUKFkMeFqjpIZJJ0hdV17tEev4BR/BTRA49KTN7q
      iLn9+43o6ZExgHCbmbRRnOD26zf7rVpvICsqA7uH19yujx06TLKrG6/Hw9joJVSHi5H9jwHQ
      299/oxiSiK7raJrGN775TX72k7+nbhiMdEWYyFSZKhi0d3YxPDy8pTGN7BpkfGmR4gb0bzab
      hFSNx/c/9sCSWlVVVFXl+9/82j2vtW2LcrmCJAqYiHjdd09Jtm2bcxfO8dOfv0Xn1wI4girN
      ioGUX29WpTJZ2nfs5Kmnn+a3v/gNvprMciaNVEkwXYEev4Zfc5DNZCkIe4j6Rgl5bppGq1Hc
      Lxub0dIj1QCiKK5l+a3+f7Vjd9QTussC7+L0Ise+8V06OzvXfR+NRllZjpNdnOHA8y+j6zqz
      UxMYhklhaQY1EKFhWLg1mf1HnuL4179NvaYzc/E07U4RLdaBIUhbXqdomsbwjl4+WZhFuY3g
      jFqd43v3P7JN7UatzIdv/5K5fJldA0O8/vKxTa+1bZtTp0/x5i/+iZ4X2nAENQQRBFGgeYud
      bts2gqLy5FNPIQgCAaeXy5mrtLd7cPjacNRSlEpZmmaYasMgKibxu1oktZkkflS4nZ6+UAaw
      ufcgb3eR3l6ZYavb+TLFMgefOUZ3d/eG18faO4j+wQ8QRZGVlWUKmTRun5+IU0JqFrAsG6rw
      3ts/56XXv0k4HKa9o5N0KsXolUsEAqH7ysEf2TXIiUsX4TYGkDWN5gNWn3gQ1KsFUrpNxOfj
      6JNP3/XaWk3n3//9XzPy2gANs8DcuQQuqYmguZi7kOT4sWOs5o3F2jvWvGVOv5vnjt4s0NvV
      3vJqiaJIMh9noO0akniTAVq78x7dHMB6OtqSC357Wr33JZIkrZk1m0n3LXmJXH727d+/KbPc
      GoCLxdo5+twLuH0Bao3mDXNJRJJEwpLBlQvnWFxYQBRForEYx772Mh7v/dXglGWZV596BjNf
      oFmtYuh6qx+1Or3d3ff1rIeBJ9zDn//oX/Lqa68S9q63yW6f00qlim2b5JcqpKZylLIVkGWM
      apml9Cz6DSVgmCaB0M3Frn2DWm53Z5f0AlHvGO1Bx9rcb+YJfBS4H2/jIzOBtkMSNAyDcM+9
      S6qvokXwMul0itsNkYDHhVFOcPnkDA7ny7jdHpxOJy635743l/f29PBENovH4+aTy5doqipu
      hG3ZGng/EASBUGi9d2ZxcZFkMsnhwze3e8qyjIgAqkn33h2EdRNNtpAcDnyZLnw3JkuSJBZm
      puns7ERVVebm5/BXnLQHoti2Tb5aoFAvs5Id5V8+5WrVcLph2sLdzdivCh5N7q1ts7wcJ1so
      MLOUxLZtEivLFCs60wvLVCsllrPFWy7fmINzZZ3uHTu33Gyj0aDRaHDg4CFylTvzTURBQFFV
      bMtGluWWbfzxh6RTm/v2N4IgCBw+eJChXYM8u28/5avjdDhcX4mqbtls9o44hNvtpj3YTSDk
      w+13E2n34XR7kZHojkXX/DWiIOBSJD764H3eeecdoh0xJvR5rmem0EMW0aM7eOa7L3L4pVd4
      Z7SIZVmP3ORZxYPO9fZogHs2blOr1SnVGkzNLxNtC1KuVEmXdeqVCuPTE3R0D9Bxm0/9diZQ
      JIlarbblDSO6ruNyuZidmSbovvMeURQRzCb+QABFUchms4QUi/OnPueVb3z7gdIMdg8O0de7
      80vN9FzVYJOTkwwMDNyhiWRZJuAPIKmtSK5t2WSvlVBUmeFw5zoPXL3RoKrX+P4Pfwi2SSAU
      QZMtRk/9gmzW4mRGw1dbJuZXvtQF74O2vS0a4J68Z5vMxRPYNrhdTnL5AvFkGsE2yekG/V1d
      mOa9C846VJnxyxdIJhJb6pff70cURZbGruB2bJzau7gU5+Tv36der3Piow+IBX1I1TwL8/Nb
      amMjqKr6pW1sMQwDXdeZn5vj/fffv6NMDbQIZv/hfWi+1mLfSkl888j3cKZbG5HWNpfnCxSq
      NV46ftMN+8G7v+bCZz9m34552poTLGcTFKplrs9uXsDri9aED8N4j8YLJCoce/YpAHbfOK6r
      O9raTzpyH1U/nKqCyyozNzZKNHbvciPQsmMHDz3BypUzBFx3uiSf2TeI3qjyq0FfOHAAACAA
      SURBVB//B4Z7YsiS1Kpi/dkndHZ1falVGe4Hq86Fv/mbv6Gzs4NL587yB9/7o00Z8dmjz5M7
      kaZp1Dm+9w3aox1cOX9pnd2u12p8/Tvfo1wu02w2EU2d5fgiXT1P8g+//Rm7dmp4Govs6urC
      Fh5sY9CXjW0SU9vL4XeTGLZt0yi1aohWq5VNr1u9NpPJEI60IQTb173cW9cZDkVmX287yo3d
      Zh2RII5GmevXr2/DaB4NLMtiYWEBXdc5c/Ikpmnx0Qfv88H77294vcvl4o+O/TE/fPpHuBxu
      fvXP/5ldg0M0Gjc1sapplMtlTp34HFmWSRVqtA0+zeOPP0XG9zrnskeou4YY6ony+K7NBdJX
      ub7pNrlBt3eA91KZotngyu9/zZXf/4Yzn3xAubRx/RfLskgmk5imicsfoGFsvEC7NSrdqkYt
      0BMNMzk+9pV+ebdidRPSvn37qOo6HqcDvVwiEtmgvLhtM3b5HMl8hfjSEv/H//pXnDv5OU5f
      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
    </thumbnail>
  </thumbnails>
</workbook>
